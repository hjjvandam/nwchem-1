!-----------------------------------------------------------------------
!>
!> \brief Evaluate the 2-electron energy contributions
!>
      subroutine noft_eval_2e_energy(noft_parameters,noft_operators,
     &                               noft_occupations,noft_energy)
      implicit none
#include "errquit.fh"
#include "noft_functional_options.fh"
      !> The calculation parameters
      type(noft_parameter_tp),   intent(in)    :: noft_parameters
      !> The operators
      type(noft_operators_tp),   intent(in)    :: noft_operators
      !> The occupation numbers
      type(noft_occupations_tp), intent(in)    :: noft_occupations
      !> The energy contributions
      type(noft_energy_tp),      intent(inout) :: noft_energy
!
!     Local
!
      real(kind=dp) :: en_2el
      real(kind=dp) :: en_2el_corr
      real(kind=dp) :: c_aa, c_ab
      real(kind=dp) :: p_aa, p_ab
      integer :: moaa_el_2, moab_el_2, mobb_el_2
      integer :: occ_1e_a,  occ_1e_b
      integer :: occ_2e_aa, occ_2e_bb
      integer :: functional
      character(len=21), parameter :: pname =
     &  "noft_eval_2e_energy: "
      character(len=4) :: func
!
      c_aa = noft_parameters%c_aa
      c_ab = noft_parameters%c_ab
      p_aa = noft_parameters%p_aa
      p_ab = noft_parameters%p_ab
      functional = noft_parameters%functional
!
      moaa_el_2 = noft_operators%moaa_el_2
      moab_el_2 = noft_operators%moab_el_2
      mobb_el_2 = noft_operators%mobb_el_2
!
      occ_1e_a  = noft_occupations%occ_1e_a
      occ_1e_b  = noft_occupations%occ_1e_b
      occ_2e_aa = noft_occupations%occ_2e_aa
      occ_2e_bb = noft_occupations%occ_2e_bb
!
      noft_energy%e_2electron = 0.0_dp
      noft_energy%e_correlation_aa = 0.0_dp
      noft_energy%e_correlation_ab = 0.0_dp
      noft_energy%e_correlation_bb = 0.0_dp
!
      call noft_eval_2e_energy_ab(c_ab,p_ab,occ_1e_a,occ_1e_b,
     &                            moab_el_2,en_2el,en_2el_corr)
      noft_energy%e_2electron = noft_energy%e_2electron + en_2el
      noft_energy%e_correlation_ab = en_2el_corr
!
      if (functional.eq.same) then
        call noft_eval_2e_energy_aa_1(c_aa,p_aa,occ_1e_a,occ_2e_aa,
     &                                moaa_el_2,en_2el,en_2el_corr)
      else if (functional.eq.conjugate) then
        call noft_eval_2e_energy_aa_2(c_aa,p_aa,occ_1e_a,occ_2e_aa,
     &                                moaa_el_2,en_2el,en_2el_corr)
      else if (functional.eq.both) then
        call noft_eval_2e_energy_aa_3(c_aa,p_aa,occ_1e_a,occ_2e_aa,
     &                                moaa_el_2,en_2el,en_2el_corr)
      else
        write(func,*)functional
        call errquit(pname//" unknown functional: "//func, 10,
     &               UERR)
      endif
      noft_energy%e_2electron = noft_energy%e_2electron + en_2el
      noft_energy%e_correlation_aa = en_2el_corr
!
      if (functional.eq.same) then
        call noft_eval_2e_energy_aa_1(c_aa,p_aa,occ_1e_b,occ_2e_bb,
     &                                mobb_el_2,en_2el,en_2el_corr)
      else if (functional.eq.conjugate) then
        call noft_eval_2e_energy_aa_2(c_aa,p_aa,occ_1e_b,occ_2e_bb,
     &                                mobb_el_2,en_2el,en_2el_corr)
      else if (functional.eq.both) then
        call noft_eval_2e_energy_aa_3(c_aa,p_aa,occ_1e_b,occ_2e_bb,
     &                                mobb_el_2,en_2el,en_2el_corr)
      else
        write(func,*)functional
        call errquit(pname//" unknown functional: "//func, 20,
     &               UERR)
      endif
      noft_energy%e_2electron = noft_energy%e_2electron + en_2el
      noft_energy%e_correlation_bb = en_2el_corr
!
      end subroutine noft_eval_2e_energy
!
!-----------------------------------------------------------------------
