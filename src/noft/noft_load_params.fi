!-----------------------------------------------------------------------
!> \brief Load the parameters for the NOFT calculations from the RTDB
!>
!> Load the various parameters from the RTDB and store them in the
!> appropriate data structures. This is also the location where defaults
!> for parameters that weren't specified in the input file are resolved.
!>
      subroutine noft_load_params(rtdb,noft_params)
      implicit none
#include "errquit.fh"
#include "mafdecls.fh"
#include "rtdb.fh"
#include "noft_solver_options.fh"
      !> The runtime database handle
      integer, intent(in) :: rtdb
      !> The calculation parameters
      type(noft_parameter_tp), intent(out) :: noft_params
!
!     Load molecule total charge
!
      if (rtdb_get(rtdb,"charge",MT_DBL,1,noft_params%charge)) then
      else
        noft_params%charge = 0.0d0
      endif
!
!     Load job parameters
!
!     Load the number of iterations (maxiter)
!
      if (rtdb_get(rtdb,"noft:maxiter", MT_INT, 1,
     &             noft_params%maxiter)) then
      else
         noft_params%maxiter = 50
      endif
!
!     Load the number of open shell orbitals (nopen)
!
      if (rtdb_get(rtdb,"noft:nopen", MT_INT, 1,
     &             noft_params%no_open)) then
      else
         noft_params%no_open = 0
      endif
!
!     Load the convergence threshold
!
      if (rtdb_get(rtdb,"noft:threshold", MT_DBL, 1,
     &             noft_params%threshold)) then
      else
          noft_params%threshold = 1.0e-8
      endif
!
!     Load levelshifts
!
      if (rtdb_get(rtdb,"noft:levelshift_orbitals", MT_DBL, 1,
     &             noft_params%levelshift_mo)) then
      else
        noft_params%levelshift_mo = 0.5
      endif
      if (rtdb_get(rtdb,"noft:levelshift_tildefuncs", MT_DBL, 1,
     &             noft_params%levelshift_to)) then
      else
        noft_params%levelshift_to = 0.5
      endif
!
!     Load the off-diagonal coefficients
!
      if (rtdb_get(rtdb,"noft:c_aa", MT_DBL, 1,
     &             noft_params%c_aa)) then
      else
        noft_params%c_aa = 1.0
      endif
      if (rtdb_get(rtdb,"noft:c_ab", MT_DBL, 1,
     &             noft_params%c_ab)) then
      else
        noft_params%c_ab = 1.0
      endif
!
!     Load the off-diagonal powers
!
      if (rtdb_get(rtdb,"noft:p_aa", MT_DBL, 1,
     &             noft_params%p_aa)) then
      else
        noft_params%p_aa = 0.5
      endif
      if (rtdb_get(rtdb,"noft:p_ab", MT_DBL, 1,
     &             noft_params%p_ab)) then
      else
        noft_params%p_ab = 0.5
      endif
!
!     Load the "temperature"
!
      if (rtdb_get(rtdb,"noft:temperature", MT_DBL, 1,
     &             noft_params%temperature)) then
      else
        noft_params%temperature = 0.5
      endif
!
!     Load the solver selection
!
      if (rtdb_get(rtdb,"noft:solver", MT_INT, 1,
     &             noft_params%solver)) then
      else
        noft_params%solver = monte_carlo
      endif
!
!     Load the solver parameters
!
      if      (noft_params%solver.eq.monte_carlo) then
        call noft_load_monte_carlo_params(rtdb,noft_params%monte_carlo)
      else if (noft_params%solver.eq.gradient_descent) then
        call errquit("Gradient descent not implemented (yet)", 0,
     &               CAPMIS_ERR)
      else
        call errquit("Invalid solver algorithm", 0, UERR)
      endif
!
      end subroutine noft_load_params
!
!-----------------------------------------------------------------------
