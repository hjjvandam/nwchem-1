// $Id: cleanmake.cpp,v 1.2 2000-08-02 01:19:45 bjohnson Exp $

/*
 * Cleaning program for auto-generated MakeFile
 *
 * BGJ (7/00)
 */

#include <string>
#include <fstream>
#include <iostream>
#include <sys/stat.h>
#include <stdio.h>

#include <assert.h>
#define ASSERT assert

using namespace std;

string GetFileAsString(const string& Filename);

int main(int argc, char* argv[])
{
  string Filename = "MakeFile";

  // Key that tells us a MakeFile has been automatically generated
  string AutoKey = "generated by convmake - do not edit";

  // Check whether output file already exists, and if so, whether it was auto-generated
  bool PreExists = false, AutoGenerated = false;
  {
    ifstream is(Filename.c_str());
    PreExists = is.good();
  }
  if (PreExists) {
    string S = GetFileAsString(Filename);
    string::size_type pos = S.find(AutoKey);
    AutoGenerated = pos != string::npos;
  }

  if (!(PreExists && AutoGenerated)) return 0;

  // Auto-generated MakeFile is exists - delete it

  ASSERT(argc == 2);
  cout << "Deleting auto-generated " << Filename << " in " << argv[1] << endl;
  if (remove(Filename.c_str()) != 0)
    cout << "  Error deleting " << Filename << endl;

  return 0;
}

string GetFileAsString(const string& Filename)
{
  // Create string of correct length at the outset - avoids inefficiency
  // of frequent resizing as the string grows
  struct _stat stats;
  int ret = _stat(Filename.c_str(), &stats);
  ASSERT(ret == 0);
  string s(stats.st_size, ' ');

  // Read the file contents into the pre-set string
  ifstream is(Filename.c_str());
  ASSERT(is);
  string::iterator i = s.begin();
  while (is.get(*i++))
    ;

  return s;
}
