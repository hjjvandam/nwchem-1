*
* $Id$
*
      subroutine hnd_propty(rtdb,basis,geom)

c ... jochen: added some response stuff here

      implicit none
#include "nwc_const.fh"
#include "errquit.fh"
#include "mafdecls.fh"
#include "global.fh"
#include "rtdb.fh"
#include "stdio.fh"
#include "int_nbf.fh"
#include "zora.fh" ! FA-09-24-10
      integer     rtdb   ! runtime database handle
      integer     basis  ! basis set "object" handle
      integer     geom   ! geometry "object" handle
      logical     status
      logical     some
      logical     out 
      integer     iopt
c     Modified by Fredy Aquino to Add EFG-ZORA4,G-shifts-ZORA
      integer
     &     nodip,noqdp,nootp,nopop,nospin,nodpl,nodhp,nod2hp,
     1     nofpl,nofhp,nof2hp,nosos,noelp,noelf,noelfg,noelfgZ4,noden,
     2     nogiao,nogshift,noston,nospinspin,noaoresponse,noboysloc,
     3     nopmloc
      data nodip,noqdp,nootp,nopop,nospin,nodpl,nodhp,nod2hp,
     1     nofpl,nofhp,nof2hp,nosos,noelp,noelf,noelfg,noelfgZ4,noden,
     2     nogiao,nogshift,noston,nospinspin,noaoresponse,noboysloc,
     3     nopmloc
     4    /  1,    1,    1,    1,    1,    1,    1,    1,    1,
     5       1,    1,    1,    1,    1,    1,    1,    1, 
     6       1,    1,    1,    1,    1,    1,    1 /
c
      out   =.false.
      some  =.true.        
      some  =some.or.out
      some  =some.and.ga_nodeid().eq.0
c
      status=rtdb_get(rtdb,'prop:dipole',MT_INT,1,nodip)            !done
      status=rtdb_get(rtdb,'prop:quadrupole',MT_INT,1,noqdp)        !done
      status=rtdb_get(rtdb,'prop:octupole',MT_INT,1,nootp)          !done
      status=rtdb_get(rtdb,'prop:mulliken',MT_INT,1,nopop)          !done
      status=rtdb_get(rtdb,'prop:hyperfine',MT_INT,1,nospin)        !done
      status=rtdb_get(rtdb,'prop:boyslocalization',MT_INT,1,noboysloc)
      status=rtdb_get(rtdb,'prop:pmlocalization',MT_INT,1,nopmloc)
      status=rtdb_get(rtdb,'prop:esp',MT_INT,1,noelp)               !done
      status=rtdb_get(rtdb,'prop:efield',MT_INT,1,noelf)            !done
      status=rtdb_get(rtdb,'prop:efieldgrad',MT_INT,1,noelfg)       !done
      status=rtdb_get(rtdb,'prop:efieldgradZ4',MT_INT,1,noelfgZ4)   !done FA
      status=rtdb_get(rtdb,'prop:electrondensity',MT_INT,1,noden)   !done
      status=rtdb_get(rtdb,'prop:stoneanalysis',MT_INT,1,noston)
      status=rtdb_get(rtdb,'prop:giao',MT_INT,1,nogiao)             !done
      status=rtdb_get(rtdb,'prop:gshift',MT_INT,1,nogshift)         !done FA-09-13-10
      status=rtdb_get(rtdb,'prop:spinspin',MT_INT,1,nospinspin)     !done
c ... jochen:
      status=rtdb_get(rtdb,'prop:aoresponse',MT_INT,1,noaoresponse) !done
c
      if(nodhp.eq.0.or.nod2hp.eq.0) nodpl=0
      if(nofhp.eq.0.or.nof2hp.eq.0) nofpl=0
      if(nospinspin.eq.0) call hnd_spinspin(rtdb,basis,geom)

c     ----- orbital localization ----

      if (nopmloc.eq.0) then
c       Pipek-Mezey localization
        call localization_driver(rtdb, basis, geom, 1)
      end if
      if (noboysloc.eq.0) then
c       Boys localization
        call localization_driver(rtdb, basis, geom, 2)
      end if
      

c     ----- aoresponse: frequency dependent response -----
c
      if (noaoresponse.eq.0) then
        iopt = 0
        status=rtdb_get(rtdb,'prop:newaoresp',MT_INT,1,iopt)
        if (iopt.eq.1) then
          call aoresponse_driver_new(rtdb, basis, geom)
        else
          call aoresponse_driver(rtdb, basis, geom)
        end if
      end if
c
c     ----- dipole moment -----
c
      if(nodip.eq.0.or.nopmloc.eq.0.or.noboysloc.eq.0.or.nodpl.eq.0) 
     &  call hnd_mtpole(rtdb,basis,geom,1)
c
c     ----- quadrupole moment -----
c
      if(noqdp.eq.0) 
     &  call hnd_mtpole(rtdb,basis,geom,2)
c
c     ----- octupole moment -----
c
      if(nootp.eq.0) 
     &  call hnd_mtpole(rtdb,basis,geom,3)
c
c     ----- (hyper)polarizabilities by -sos- -----
c
*     if(nosos.eq.0) call hnd_sosx
c
c     ----- dipole polarizability -----
c     ----- symmetry turned off   -----
c
*     if(nosym.ne.0) call hnd_symoff
c
*     if(nodpl.eq.0.and.nofpl.ne.0) call hnd_dpl
c
c     ----- dipole hyperpolarizability -----
c
*     if(nodhp.eq.0.and.nofhp.ne.0) call hnd_dhp
c
c     ----- dipole second hyperpolarizability -----
c
*     if(nod2hp.eq.0.and.nof2hp.ne.0) call hnd_d2hp
c
c     ----- frequency dependent dipole polarizability -----
c
*     if(nofpl.eq.0) call hnd_fpl
c
c     ----- freqency dependent dipole hyperpolarizability -----
c
*     if(nofhp.eq.0) call hnd_fhp
c
c     ----- frequency dependent dipole second hyperpolarizability -----
c
*     if(nof2hp.eq.0) call hnd_f2hp
c
c     ----- symmetry turned on again -----
c
*      if(nosym.ne.0) call hnd_symon
c
c     ----- mulliken population analysis -----
c
      if(nopop.eq.0) call hnd_mulken(rtdb,basis,geom)
c
c     ----- atomic spin density -----
c
      if(nospin.eq.0 .and. (.not.do_zora))
     &  call hnd_spind(rtdb,basis,geom)

      if((nospin.eq.0) .and. (do_zora)) then
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++ NMR Hyperfine with ZORA ++++ START"
         write(*,*) " ++++++++++++++++++++++++++++++++++++++"
        endif
        call hnd_hyperfine_ZORA(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++ NMR Hyperfine with ZORA ++++ END"
         write(*,*) " ++++++++++++++++++++++++++++++++++++"
        endif
      end if
c
c     ----- electrostatic potential -----
c
      if(noelp.eq.0) call hnd_elpmap(rtdb,basis,geom)
 
c     ----- electric field -----
c
      if(noelf.eq.0) call hnd_elfmap(rtdb,basis,geom)
c
c     ----- electric field gradient -----
c
      if(noelfg.eq.0) call hnd_efgmap(rtdb,basis,geom)
c
c     ----- electric field gradient with ZORA 4 ----- FA-11-24-09
c
      if(noelfgZ4.eq.0) then
        if (ga_nodeid().eq.0) then
         write(*,*) " ===================================="
         write(*,*) " ========= ZORA-EFG =========== START"
         write(*,*) " ===================================="
        endif
       call hnd_efgmap(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " ===================================="
         write(*,*) " ========= ZORA-EFG =========== END"
         write(*,*) " ===================================="
        endif
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++++++++ ZORA4-SR-EFG +++++++++++ START"
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++"
        endif
       call hnd_efgmap_Z4(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++++++++ ZORA4-SR-EFG +++++++++++ END"
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++"
        endif
      end if
c
c     ----- electron and spin densities -----
c
      if(noden.eq.0) call hnd_eldmap(rtdb,basis,geom)
c
c     ----- giao -nmr- chemical shifts -----
      if(nogiao.eq.0 .and. (.not.do_zora)) then
        call hnd_giaox(rtdb,basis,geom)
        goto 111
c Note.- hnd_giaox_ZORA() is not working yet for NonRel DFT
c       it gives different results than hnd_giaox() FA-04-06-11
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " ++ NONREL NMR Shieldings  hnd_giao_ZORA ++ START"
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++++++++++"
        endif
       call hnd_giaox_ZORA(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " ++ NONREL NMR Shieldings  hnd_giao_ZORA ++ END"
         write(*,*) " ++++++++++++++++++++++++++++++++++++++++++++++"
        endif
 111    continue
      endif
 
      if((nogiao.eq.0) .and. (do_zora)) then
        if (ga_nodeid().eq.0) then
         write(*,*) " +++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++ NMR Shieldings with ZORA-SR +++ START"
         write(*,*) " +++++++++++++++++++++++++++++++++++++++++"
        endif
       call hnd_giaox_ZORA(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " +++++++++++++++++++++++++++++++++++++++++"
         write(*,*) " +++ NMR Shieldings with ZORA-SR +++   END"
         write(*,*) " +++++++++++++++++++++++++++++++++++++++++"
        endif
      end if
       if(nogshift.eq.0) then
        if (ga_nodeid().eq.0) then
         write(*,*) " ===================================="
         write(*,*) " ========= g shift ======== START"
         write(*,*) " ===================================="
        endif
         call hnd_gshift_ZORA(rtdb,basis,geom)
        if (ga_nodeid().eq.0) then
         write(*,*) " ===================================="
         write(*,*) " ========= g shift ======== END"
         write(*,*) " ===================================="
        endif
      end if
c
c     ----- stone's distributed multipole analysis -----
c
      noston=1
!     if(noston.eq.0) call hnd_stonex
c
c     ----- boys orbital localization -----
c
      noboysloc=1
!     if(noboysloc.eq.0) call hnd_boyloc
!     if(noboysloc.eq.0) call hnd_mulken(rtdb,basis,geom)
c
      return
      end
