      SUBROUTINE CHECK_HTF_APR(NSPOBEX,ISPOBEX,IOKAY)
*
* For the CC expansion given by ISPOBEX, check that
* the relevant parts of HEXP T can be written as
*
* H EXP T |HF > = H( sum_I E_I + sum_{IJ}T_I F_{IJ} ) | HF >
*
* The approach requires that no product T(I)T(J)T(K), 
* I.ge.J.ge.K(execution order) exists for  which
* 1 : T(J)T(K) is outside operator space
* 2 : T(I)T(J)T(K) can be connected to operator space by
*     excitation in H
*
* Jeppe Olsen, August 2001
*
c      INCLUDE 'implicit.inc'
c      INCLUDE 'mxpdim.inc'
      INCLUDE 'wrkspc.inc'
      INCLUDE 'cgas.inc'
*. Input
      INTEGER ISPOBEX(4*NGAS,*)
*. Local scratch
      PARAMETER(MXNTOP = 3)
      INTEGER ITTTOP(MXNTOP), ITTTOP2(MXNTOP)
      INTEGER IJKOCC(4*MXPNGAS),IIJKOCC(4*MXPNGAS)
*
      NTEST = 10  
      IDUM = 0
      CALL MEMMAN(IDUM,IDUM,'MARK  ',IDUM,'CH_HTF')  
*. local scratch for execution order
      CALL MEMMAN(KL_EXEORD,NSPOBEX,'ADDL  ',1,'EXE_OR')
*. Execution order
      CALL ORD_CCEXTP(WORK(KL_EXEORD))
*. Loop over MXNTOP operators in nonrestrict ascending order
      IFIRST = 1
      NLOOP = 0
      NEXCP = 0
 1000 CONTINUE
      IF( IFIRST. EQ. 1 ) THEN
*. Initiate
       CALL ISETVC(ITTTOP2,1,MXNTOP)
       IFIRST = 0
       NONEW = 0
      ELSE
       CALL NXTORD_NS(ITTTOP2,MXNTOP,1,NSPOBEX,NONEW)
      END IF
* We obtained from NXTORD_NS a row of numbers (in execution order)
* in nonrestrict ascending  order. 
* But we wanted the T operators as T(I)T(K)T(K), I.ge.j ge.k -
* and we want the original t-operators
* but according to the introductory comments 
      DO IOP = 1, MXNTOP
        JOP = ITTTOP2(IOP)
C  IFRMR(WORK,IROFF,IELMNT)
        JJOP = IFRMR(WORK,KL_EXEORD,JOP)
        ITTTOP(MXNTOP+1-IOP) = JJOP
      END DO
*. Check if T(J)T(K) does not correspond to a CC type and 
*.          T(I)T(J)T(K) can be connected to type by H
*. Occupation of T(J)T(K)
C  OP_T_OCC(IOPOCC,ITOCC,IOPTOCC,IMZERO)
      CALL OP_T_OCC(ISPOBEX(1,ITTTOP(2)),ISPOBEX(1,ITTTOP(3)),
     &              IJKOCC,IJKZERO)
*. Well, single excitations are handled differently so check of any of the 
*. operators are single excitations
      NOP1 = IELSUM(ISPOBEX(1,ITTTOP(1)),4*NGAS)
      NOP2 = IELSUM(ISPOBEX(1,ITTTOP(2)),4*NGAS)
      NOP3 = IELSUM(ISPOBEX(1,ITTTOP(3)),4*NGAS)
      IF(NOP1.EQ.2.OR.NOP2.EQ.2.OR.NOP3.EQ.2) IJKZERO = 1
      IF(NTEST.GE.1000) THEN
        WRITE(6,*) ' Triplet of operators ', (ITTTOP(I),I=1,3)
        WRITE(6,*) ' IJKZERO = ', IJKZERO
      END IF
      IF(IJKZERO.EQ.0) THEN
*. Is T(J)T(K) operator in current list
        CALL INUM_FOR_OCC2(IJKOCC,IJKNUM,NDIFF)
        IF(NTEST.GE.1000) WRITE(6,*) ' IJKNUM = ', IJKNUM
*. Continue check only if TJK is out of space
        IF(IJKNUM.EQ.-1) THEN                      
*. Find occupation of T(I)T(J)T(K)
         CALL OP_T_OCC(ISPOBEX(1,ITTTOP(1)),IJKOCC,
     &               IIJKOCC,IIJKZERO)
        IF(NTEST.GE.1000) WRITE(6,*) ' IIJKZERO = ', IIJKZERO
*. Number of operators required to connect I321OCC with reference
         IF(IIJKZERO.EQ.0) THEN
          CALL INUM_FOR_OCC2(IIJKOCC,IIJKNUM,NIJKDIFF)
          IF(NTEST.GE.1000) THEN
            WRITE(6,*) ' IIJKNUM,NIJKDIFF = ', IIJKNUM,NIJKDIFF
          END IF
          IF(NIJKDIFF.LE.4) THEN
*. An exception has been found
           NEXCP = NEXCP + 1
           IF(NTEST.GE.10) THEN
             WRITE(6,*) ' T(I) T(J) T(K) not included in H_TF approach'
             CALL WRT_SPOX_TP(ISPOBEX(1,ITTTOP(1)),1)
             CALL WRT_SPOX_TP(ISPOBEX(1,ITTTOP(2)),1)
             CALL WRT_SPOX_TP(ISPOBEX(1,ITTTOP(3)),1)
             WRITE(6,*) 
     &       ' Number of ops required for connection = ', NIJKDIFF
           END IF
          END IF
         END IF
        END IF
*       ^ End if IJKNUM = 0  
      END IF
*     ^ End if IJKZERO = 0
      NLOOP = NLOOP + 1
      IF(NONEW.EQ.0) GOTO 1000
*
C?    IF(NLOOP.EQ.10000) THEN
C?      WRITE(6,*) ' Check stopped due to infinite loop (?) '
C?      STOP ' Check stopped due to infinite loop (?) '
C?    END IF
*
      IF(NEXCP.EQ.0) THEN
*. No exceptions occured, so expansion is OKAY
       IOKAY = 1
      ELSE
       WRITE(6,*) ' Number of exceptions in H_TF approach = ', NEXCP
       STOP ' H_TF approach is not valid '
      END IF
      CALL MEMMAN(IDUM,IDUM,'FLUSM ',IDUM,'CH_HTF')  
*
      RETURN
      END
      SUBROUTINE NXTORD_NS(INUM,NELMNT,MINVAL,MAXVAL,NONEW)
*
* An ordered set of numbers INUM(I),I=1,NELMNT is
* given in nonstrict ascending order
* (adjecent elements may be identical)
* Values of INUM(*) is
* restricted to the interval MINVAL,MAXVAL .
*
* Find next higher number in nonstrict ascending order.
*
* NONEW = 1 on return indicates that no additional numbers
* could be obtained.
* If the array is zero-dimensional (NELMNT = 0),
* the routine sends NONEW = 1 back
*
* Jeppe Olsen May 1989
*
      DIMENSION INUM(*)
*
       NTEST = 00
       IF( NTEST .NE. 0 ) THEN
         WRITE(6,*) ' Initial number in NXTORD '
         CALL IWRTMA(INUM,1,NELMNT,1,NELMNT)
       END IF
*
      IF(NELMNT.EQ.0) THEN
        NONEW = 1
        GOTO 1001
      END IF
*
      IPLACE = 0
 1000 CONTINUE
        IPLACE = IPLACE + 1
        IF( IPLACE .LT. NELMNT .AND.
     &      INUM(IPLACE)+1 .LE. INUM(IPLACE+1)
     &  .OR.IPLACE.EQ. NELMNT .AND.
     &      INUM(IPLACE)+1.LE.MAXVAL) THEN
              INUM(IPLACE) = INUM(IPLACE) + 1
              NONEW = 0
              GOTO 1001
        ELSE IF ( IPLACE.LT.NELMNT) THEN
              IF(IPLACE .EQ. 1 ) THEN
                INUM(IPLACE) = MINVAL
              ELSE
                INUM(IPLACE) = INUM(IPLACE-1) 
              END IF
        ELSE IF ( IPLACE. EQ. NELMNT ) THEN
              NONEW = 1
              GOTO 1001
        END IF
      GOTO 1000
 1001 CONTINUE
*
      IF( NTEST .NE. 0 ) THEN
        WRITE(6,*) ' New number '
        CALL IWRTMA(INUM,1,NELMNT,1,NELMNT)
      END IF
*
      RETURN
      END
*
