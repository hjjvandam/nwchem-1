      SUBROUTINE MXMNOC_OCCLS2(MINEL,MAXEL,NORBTP,NORBFTP,NELFTP,
     &                  MINOP,NTESTG)
*
* Construct accumulated MAX and MIN arrays for an occupation class
*
* MINOP ( Smallest allowed number of open orbitals) added 
* April2, 2003, JO
*
      IMPLICIT REAL*8           ( A-H,O-Z)
*. Output
      DIMENSION  MINEL(*),MAXEL(*)
*. Input
      INTEGER NORBFTP(*),NELFTP(*)
*. Local scratch added April 2, 2003
*
      INCLUDE 'mxpdim.inc'
C     INTEGER MINOP_ORB(MXPORB), MINOP_GAS(MXPNGAS), MAXOP_GAS(MXPNGAS)
      INTEGER MINOP_GAS(MXPNGAS), MAXOP_GAS(MXPNGAS)
*
      NTESTL = 00
      NTEST = MAX(NTESTG,NTESTL)
*
      IF(NTEST.GE.100) THEN
        WRITE(6,*)
        WRITE(6,*) ' ==========='
        WRITE(6,*) ' MXMNOC_OCCLS'
        WRITE(6,*) ' ==========='
        WRITE(6,*)
        WRITE(6,*) ' NORBTP = ', NORBTP
        WRITE(6,*) ' NORBFTP : '
        CALL IWRTMA(NORBFTP,1,NORBTP,1,NORBTP)
      END IF
*
*. Largest number of unpaired electrons in each gas space 
*
      DO IGAS = 1, NGAS
        MAXOP_GAS(IGAS) = MIN(NELFTP(IGAS),2*NORBFTP(IGAS)-NELFTP(IGAS))
      END DO
*
*. Smallest number of electrons in each GAS space 
*
*. 1 : Just based on number of electrons in each space 
      DO IGAS = 1, NGAS
        IF(MOD(NELFTP(IGAS),2).EQ.1) THEN
          MINOP_GAS(IGAS) = 1
        ELSE
          MINOP_GAS(IGAS) = 0
        END IF
      END DO
*. 2 : the total number of open orbitals should be MINOP, this puts 
*. also a constraint on the number of open orbitals
*
*. The largest number of open orbitals, all spaces
      MAXOP_T = IELSUM(MAXOP_GAS,NGAS)
      DO IGAS = 1, NGAS
*. Max number of open orbitals in all spaces except IGAS
       MAXOP_EXL = MAXOP_T - MAXOP_GAS(IGAS)
       MINOP_GAS(IGAS) = MAX(MINOP_GAS(IGAS),MINOP-MAXOP_EXL)
      END DO
*. We now have the min and max number of open shells per occls,
*. Find the corresponding min and max number accumulated electrons, 
*
* The Max occupation is obtained by occupying in max in the 
* first orbitals 
* The Min occupation is obtained by occopying max in the 
* last orbitals.
*
      DO IGAS = 1, NGAS
        MAX_DOUBLE = (NELFTP(IGAS)-MINOP_GAS(IGAS))/2
        IF(IGAS.EQ.1) THEN
          NEL_INI = 0
          IBORB = 1
        ELSE 
          NEL_INI = NEL_INI + NELFTP(IGAS)
          IBORB = IBORB + NORBFTP(IGAS)
        END IF
        NELEC = NELFTP(IGAS)
*
* The min number of electrons
*
*. Doubly occupy the last MAX_DOUBLE orbitals
        DO IORB = NORBFTP(IGAS)-MAX_DOUBLE,NORBFTP(IGAS)
           MINEL(IORB+IBORB-1) = 
     &     NEL_INI + NELEC - 2*(NORBFTP(IGAS)-IORB)
        END DO
*. Singly occupy 
        DO IORB = NORBFTP(IGAS)-MAX_DOUBLE-1,1,-1
           MINEL(IORB+IBORB-1) = MAX(NEL_INI,MINEL(IORB+IBORB-1+1)-1)
        END DO
*
*. The max number of electrons 
*
       DO IORB = 1, MAX_DOUBLE
         MAXEL(IORB+IBORB-1) = NEL_INI + 2*IORB 
       END DO 
       DO IORB = MAX_DOUBLE+1, NORBFTP(IGAS)  
         MAXEL(IORB+IBORB-1) = MIN(NEL_INI+NELEC,MAXEL(IORB+IBORB-2)+1)
       END DO
      END DO
*
C     IORB_START = 0
C     DO IORBTP = 1, NORBTP
*. Max and min at start of this type and at end of this type
C       IF(IORBTP.EQ.1) THEN
C         IORB_START = 1
C         IORB_END = NORBFTP(1)
C         NEL_START = 0
C         NEL_END   = NELFTP(1)
C       ELSE
C         IORB_START =  IORB_START + NORBFTP(IORBTP-1)
C         IORB_END   =  IORB_START + NORBFTP(IORBTP)-1
C         NEL_START = NEL_END
C         NEL_END   = NEL_START + NELFTP(IORBTP)
C       END IF
C       IF(NTEST.GE.1000) THEN
C         WRITE(6,*) ' IORBTP,IORB_START-IORB_END,NEL_START,NEL_END '
C         WRITE(6,*)   IORBTP,IORB_START-IORB_END,NEL_START,NEL_END
C       END IF
*
C       DO IORB = IORB_START, IORB_END
C         MAXEL(IORB) = MIN(2*IORB,NEL_END,MAXEL(IORB))
C         MINEL(IORB) = NEL_START
C         IF(NEL_END-MINEL(IORB).GT. 2*(IORB_END-IORB))
C    &    MINEL(IORB) = NEL_END - 2*( IORB_END - IORB )

C       END DO
C     END DO
*
      IF( NTEST .GE. 100 ) THEN
        NORB = IELSUM(NORBFTP,NORBTP)
        WRITE(6,*) ' MINEL : '
        CALL IWRTMA(MINEL,1,NORB,1,NORB)
        WRITE(6,*) ' MAXEL : '
        CALL IWRTMA(MAXEL,1,NORB,1,NORB)
      END IF
*
      RETURN
      END


