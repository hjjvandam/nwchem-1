
The geometry data includes

   1) A description of the coordinates of all types of centers (e.g.,
      atom, charge, basis function)

   2) Charges (and I guess possibly other potentials) associated with
      those centers

   3) Tags (names) of centers

   4) Masses associated with centers

   5) Variables for optimization (e.g., via constrained cartesians
      or zmatrix variables)

   6) Any other simple scalar/vector attributed associated
      specifically with a center

Operations

   1) Store/retrieve from the database

   logical geom_rtdb_load(rtdb, name, geom)
   integer rtdb          [input]
   character*(*) name    [input]
   integer geom          [output]

   logical geom_rtdb_store(rtdb, 'geometry', geom)
   integer rtdb          [input]
   character*(*) name    [input]
   integer geom          [input]

   2) Create/destroy

   logical geom_create(geom)
   integer geom          [output]

   logical geom_destroy(geom)
   integer geom          [input]

   3) Set/get commmon values for all centers

   logical geom_cart_set(geom, ncent, tags, coords, charges)
   integer geom                    [input]
   integer ncent                   [input]
   character*(*) tags(ncent)       [input]
   character*(*) coords(3, ncent)  [input]
   character*(*) charges(ncent)    [input]

   logical geom_cart_get(geom, ncent, tags, coords, charges)
   integer geom                    [input]
   integer ncent                   [output]
   character*(*) tags(ncent)       [output]
   character*(*) coords(3, ncent)  [output]
   character*(*) charges(ncent)    [output]

   4) Set/get common values for specific centers

   logical geom_cent_set(geom, icent, tag, coord, charge)
   integer geom             [input]
   integer ncent            [input]
   character*(*) tag        [input]
   character*(*) coords(3)  [input]
   character*(*) charge     [input]

   logical geom_cent_get(geom, icent, tag, coord, charge)
   integer geom             [input]
   integer ncent            [output]
   character*(*) tag        [output]
   character*(*) coords(3)  [output]
   character*(*) charge     [output]

   5) Inquiry routines

   integer function geom_ncent(geom)
   integer geom             [input]

   logical function geom_cent_tag(geom, icent, tag)
   integer geom             [input]
   integer icent            [input]
   character*(*) tag        [output]

   6) Set/get specific values for specific centers

   There are two possibilities here

     a) adopt an extensible definition of properties associated
        with a center.  This includes registering new properties
        with a name and routines to set/get/load/store the values
        and some general format (e.g., netcdf) for describing
        and passing data.

     b) adopt a static definition of the data structures and
        require recompilation after the structures have been changed
        and new routines provided.  

   Do we think that new properties will be added very regularly or
   that this will become very infrequent?  I tend to think the latter,
   so a) is not yet worth the effort.  Since b) requires very little
   effort we can always change our minds and do a) later.


   7) Zmatrix routines ... not yet defined 

      n_zmat_cent, n_zmat_vars, ...
      logical geom_zmat_defined()
      call geom_zmat_get
      call geom_zmat_set
      ...


Data on the rtdb

