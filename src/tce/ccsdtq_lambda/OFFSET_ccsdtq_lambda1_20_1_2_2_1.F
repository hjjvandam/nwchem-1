      SUBROUTINE OFFSET_ccsdtq_lambda1_20_1_2_2_1(d_a,l_a_offset,k_a_off
     &set,size)
C     $Id: OFFSET_ccsdtq_lambda1_20_1_2_2_1.F,v 1.1 2003-09-16 21:51:09 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h4 h6 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h4b
      INTEGER h6b
      INTEGER p7b
      INTEGER p8b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*nvab*nvab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda1_20_1_2_2_1',0)
      size = 0
      DO h4b = 1,noab
      DO h6b = h4b,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1) .eq. int_mb(k_spin+p
     &7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      int_mb(k_a_offset + p8b - noab - 1 + nvab * (p7b - noab - 1 + nvab
     & * (h6b - 1 + noab * (h4b - 1)))) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+h6b-1) * int_
     &mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
