      SUBROUTINE ccsdtq_lambda2_13_10(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdtq_lambda2_13_10.F,v 1.2 2003-10-19 00:54:15 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p16 p17 h14 h15 )_vt + = -1 * Sum ( h9 h10 p7 ) * t ( p7 p16 p17 h9 h10 h14 )_t * i2 ( h9 h10 h15 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p16b
      INTEGER p17b
      INTEGER h14b
      INTEGER h15b
      INTEGER p7b
      INTEGER h9b
      INTEGER h10b
      INTEGER p16b_1
      INTEGER p17b_1
      INTEGER p7b_1
      INTEGER h14b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h15b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p7
      INTEGER p16
      INTEGER p17
      INTEGER h9
      INTEGER h10
      INTEGER h14
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h15
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p16b = noab+1,noab+nvab
      DO p17b = p16b,noab+nvab
      DO h14b = 1,noab
      DO h15b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p16b-1)+int_mb(k_spin+p17b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p16b-1)+int_mb(k_spin+p17b-1) .eq. int_mb(k_spin
     &+h14b-1)+int_mb(k_spin+h15b-1)) THEN
      IF (ieor(int_mb(k_sym+p16b-1),ieor(int_mb(k_sym+p17b-1),ieor(int_m
     &b(k_sym+h14b-1),int_mb(k_sym+h15b-1)))) .eq. ieor(irrep_v,irrep_t)
     &) THEN
      DO p7b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p16b-1)+int_mb(k_spin+p17b-1)+int_mb(k_spin+p7b-
     &1) .eq. int_mb(k_spin+h14b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h
     &10b-1)) THEN
      IF (ieor(int_mb(k_sym+p16b-1),ieor(int_mb(k_sym+p17b-1),ieor(int_m
     &b(k_sym+p7b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h9b-1),
     &int_mb(k_sym+h10b-1)))))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p16b-1)+int_mb(k_spin+p17b-1)+
     &int_mb(k_spin+p7b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h9b-1)+in
     &t_mb(k_spin+h10b-1).eq.12)) THEN
      p16b_1 = int_mb(k_alpha+p16b-1)
      p17b_1 = int_mb(k_alpha+p17b-1)
      p7b_1 = int_mb(k_alpha+p7b-1)
      h14b_1 = int_mb(k_alpha+h14b-1)
      h9b_1 = int_mb(k_alpha+h9b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      ELSE
      p16b_1 = p16b
      p17b_1 = p17b
      p7b_1 = p7b
      h14b_1 = h14b
      h9b_1 = h9b
      h10b_1 = h10b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+h15b-1)+int_mb(k_spin+p7b-1).eq.8)) THEN
      h9b_2 = int_mb(k_alpha+h9b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      h15b_2 = int_mb(k_alpha+h15b-1)
      p7b_2 = int_mb(k_alpha+p7b-1)
      ELSE
      h9b_2 = h9b
      h10b_2 = h10b
      h15b_2 = h15b
      p7b_2 = p7b
      END IF
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+p16b-1) * int_mb(k_range+p17b-1) * int_
     &mb(k_range+h14b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_13_10',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_13_10',1,MA_ERR)
      IF ((p7b .le. p16b) .and. (h10b .le. h14b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h14b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p16b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idima = h14 + int_mb(k_range+h14b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p16 - 1) + int_mb(k_range+p16b-1) * ((p7 - 1)
     &)))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p7b .le. p16b) .and. (h9b .le. h14b) .and. (h14b .lt. h10b)) 
     &THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h14b_1 - 1 + noab * (h9b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p16b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h14 - 1) + int_mb(k_range
     &+h14b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p16 - 1) + int_mb(k_range+p16b-1) * ((p7 - 1)
     &)))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p7b .le. p16b) .and. (h14b .lt. h9b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h9b_1 - 1 + noab * (h14b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p16b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h9 - 1) + int_mb(k_range+
     &h9b-1) * ((h14 - 1) + int_mb(k_range+h14b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p16 - 1) + int_mb(k_range+p16b-1) * ((p7 - 1)
     &)))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p16b .lt. p7b) .and. (p7b .le. p17b) .and. (h10b .le. h14b)) 
     &THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h14b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p7b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idima = h14 + int_mb(k_range+h14b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p16b .lt. p7b) .and. (p7b .le. p17b) .and. (h9b .le. h14b) .a
     &nd. (h14b .lt. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h14b_1 - 1 + noab * (h9b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p7b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h14 - 1) + int_mb(k_range
     &+h14b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p16b .lt. p7b) .and. (p7b .le. p17b) .and. (h14b .lt. h9b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h9b_1 - 1 + noab * (h14b_1 - 1 + noab * (p17b_1 - noab 
     &- 1 + nvab * (p7b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h9 - 1) + int_mb(k_range+
     &h9b-1) * ((h14 - 1) + int_mb(k_range+h14b-1) * ((p17 - 1) + int_mb
     &(k_range+p17b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p17b .lt. p7b) .and. (h10b .le. h14b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h14b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p7b_1 - noab -
     & 1 + nvab * (p17b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idima = h14 + int_mb(k_range+h14b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p7 - 1) + int_mb(
     &k_range+p7b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p17b .lt. p7b) .and. (h9b .le. h14b) .and. (h14b .lt. h10b)) 
     &THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h14b_1 - 1 + noab * (h9b_1 - 1 + noab * (p7b_1 - noab -
     & 1 + nvab * (p17b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h14 - 1) + int_mb(k_range
     &+h14b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p7 - 1) + int_mb(
     &k_range+p7b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p17b .lt. p7b) .and. (h14b .lt. h9b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h9b_1 - 1 + noab * (h14b_1 - 1 + noab * (p7b_1 - noab -
     & 1 + nvab * (p17b_1 - noab - 1 + nvab * (p16b_1 - noab - 1)))))))
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h9 - 1) + int_mb(k_range+
     &h9b-1) * ((h14 - 1) + int_mb(k_range+h14b-1) * ((p7 - 1) + int_mb(
     &k_range+p7b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((p16 - 1))
     &))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p16 - 1) + int
     &_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((h14 
     &- 1))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_13_10',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_13_10',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda2_13_10',4,MA_ERR)
      IF ((h15b .le. p7b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p7b_2 - no
     &ab - 1 + nvab * (h15b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1)))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      idimb = p7 + int_mb(k_range+p7b-1) * ((h15 - 1) + int_mb(k_range+h
     &15b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1))))
      idimb_sort = p7 + int_mb(k_range+p7b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h15 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda2_13_10',5,
     &MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_13_10',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda2_13_10',7,MA_ERR)
      IF ((h14b .le. h15b)) THEN
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      idimc_sort = p16 + int_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_
     &range+p17b-1) * ((h14 - 1) + int_mb(k_range+h14b-1) * ((h15 - 1)))
     &)
      idimc = h15 + int_mb(k_range+h15b-1) * ((h14 - 1) + int_mb(k_range
     &+h14b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((p16 - 1))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h15b - 1 + noab * (h14b - 1 + noab * (p17b - noab - 1 + nvab 
     &* (p16b - noab - 1)))))
      END IF
      IF ((h15b .le. h14b)) THEN
      DO p16 = 1,int_mb(k_range+p16b-1)
      DO p17 = 1,int_mb(k_range+p17b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idimc_sort = p16 + int_mb(k_range+p16b-1) * ((p17 - 1) + int_mb(k_
     &range+p17b-1) * ((h14 - 1) + int_mb(k_range+h14b-1) * ((h15 - 1)))
     &)
      idimc = h14 + int_mb(k_range+h14b-1) * ((h15 - 1) + int_mb(k_range
     &+h15b-1) * ((p17 - 1) + int_mb(k_range+p17b-1) * ((p16 - 1))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h14b - 1 + noab * (h15b - 1 + noab * (p17b - noab - 1 + nvab 
     &* (p16b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_13_10',8,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_13_1
     &0',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda2_13_1
     &0',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_13_1
     &0',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
