      SUBROUTINE OFFSET_ccsdtq_lambda2_23_7_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda2_23_7_1.F,v 1.2 2003-10-19 00:53:51 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h3 h12 h15 h17 )_vtt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h3b
      INTEGER h12b
      INTEGER h15b
      INTEGER h17b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda2_23_7_1',0,MA_ERR)
      size = 0
      DO h3b = 1,noab
      DO h12b = 1,noab
      DO h15b = 1,noab
      DO h17b = h15b,noab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+
     &h15b-1)+int_mb(k_spin+h17b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+h15b-1),int_mb(k_sym+h17b-1)))) .eq. ieor(irrep_v,ieor(irre
     &p_t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h17b-1).ne.8)) THEN
      int_mb(k_a_offset + h17b - 1 + noab * (h15b - 1 + noab * (h12b - 1
     & + noab * (h3b - 1)))) = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+h12b-1) * int
     &_mb(k_range+h15b-1) * int_mb(k_range+h17b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
