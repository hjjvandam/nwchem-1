      SUBROUTINE OFFSET_ccsdtq_lambda2_28_1(d_a,l_a_offset,k_a_offset,si
     &ze)
C     $Id: OFFSET_ccsdtq_lambda2_28_1.F,v 1.1 2003-09-16 21:51:23 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h3 h4 h8 h12 h13 p1 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h3b
      INTEGER h4b
      INTEGER h8b
      INTEGER p1b
      INTEGER h12b
      INTEGER h13b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab*noab*nvab,'noname'
     &,l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda2_28_1',0)
      size = 0
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h8b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO h12b = 1,noab
      DO h13b = h12b,noab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p1
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),i
     &nt_mb(k_sym+p1b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)
     &+int_mb(k_spin+p1b-1).ne.12)) THEN
      int_mb(k_a_offset + h13b - 1 + noab * (h12b - 1 + noab * (p1b - no
     &ab - 1 + nvab * (h8b - 1 + noab * (h4b - 1 + noab * (h3b - 1))))))
     & = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_
     &mb(k_range+h8b-1) * int_mb(k_range+p1b-1) * int_mb(k_range+h12b-1)
     & * int_mb(k_range+h13b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
