      SUBROUTINE OFFSET_ccsdtq_lambda2_24_1_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda2_24_1_1.F,v 1.1 2003-09-16 21:51:22 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( p15 p17 p1 p6 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER p15b
      INTEGER p17b
      INTEGER p1b
      INTEGER p6b
      IF (.not.MA_PUSH_GET(mt_int,nvab*nvab*nvab*nvab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda2_24_1_1',0)
      size = 0
      DO p15b = noab+1,noab+nvab
      DO p17b = p15b,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p15b-1)+int_mb(k_spin+p17b-1) .eq. int_mb(k_spin
     &+p1b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p15b-1),ieor(int_mb(k_sym+p17b-1),ieor(int_m
     &b(k_sym+p1b-1),int_mb(k_sym+p6b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p15b-1)+int_mb(k_spin+p17b
     &-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      int_mb(k_a_offset + p6b - noab - 1 + nvab * (p1b - noab - 1 + nvab
     & * (p17b - noab - 1 + nvab * (p15b - noab - 1)))) = size
      size = size + int_mb(k_range+p15b-1) * int_mb(k_range+p17b-1) * in
     &t_mb(k_range+p1b-1) * int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
