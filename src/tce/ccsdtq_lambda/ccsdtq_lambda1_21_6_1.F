      SUBROUTINE ccsdtq_lambda1_21_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_lambda1_21_6_1.F,v 1.2 2003-10-19 00:54:06 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 p15 p19 h16 h17 p4 )_vt + = 1 * Sum ( p8 ) * t ( p8 p15 h16 h17 )_t * i3 ( h2 p19 p4 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p15b
      INTEGER p19b
      INTEGER h16b
      INTEGER h17b
      INTEGER p4b
      INTEGER p8b
      INTEGER p15b_1
      INTEGER p8b_1
      INTEGER h16b_1
      INTEGER h17b_1
      INTEGER h2b_2
      INTEGER p19b_2
      INTEGER p4b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p8
      INTEGER p15
      INTEGER h16
      INTEGER h17
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h2
      INTEGER p19
      INTEGER p4
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO p15b = noab+1,noab+nvab
      DO p19b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO h17b = h16b,noab
      DO p4b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-
     &1)+int_mb(k_spin+p19b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-
     &1)+int_mb(k_spin+p4b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p19b-
     &1) .eq. int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1)+int_mb(k_spin+
     &p4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_mb
     &(k_sym+p19b-1),ieor(int_mb(k_sym+h16b-1),ieor(int_mb(k_sym+h17b-1)
     &,int_mb(k_sym+p4b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p15b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+
     &h16b-1)+int_mb(k_spin+h17b-1)) THEN
      IF (ieor(int_mb(k_sym+p15b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb
     &(k_sym+h16b-1),int_mb(k_sym+h17b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p15b-1)+int_mb(k_spin+p8b-1)+i
     &nt_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1).eq.8)) THEN
      p15b_1 = int_mb(k_alpha+p15b-1)
      p8b_1 = int_mb(k_alpha+p8b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      h17b_1 = int_mb(k_alpha+h17b-1)
      ELSE
      p15b_1 = p15b
      p8b_1 = p8b
      h16b_1 = h16b
      h17b_1 = h17b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p19b-1)+i
     &nt_mb(k_spin+p4b-1)+int_mb(k_spin+p8b-1).eq.8)) THEN
      h2b_2 = int_mb(k_alpha+h2b-1)
      p19b_2 = int_mb(k_alpha+p19b-1)
      p4b_2 = int_mb(k_alpha+p4b-1)
      p8b_2 = int_mb(k_alpha+p8b-1)
      ELSE
      h2b_2 = h2b
      p19b_2 = p19b
      p4b_2 = p4b
      p8b_2 = p8b
      END IF
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+p15b-1) * int_mb(k_range+h16b-1) * int_
     &mb(k_range+h17b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+p19b-1) * int_m
     &b(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_21_6_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_21_6_1',1,MA_ERR)
      IF ((p8b .le. p15b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h17b_1 - 1
     & + noab * (h16b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p8b_1 
     &- noab - 1)))))
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idima = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p8 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((p15 - 1) + int_mb(k_ra
     &nge+p15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h17 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p15b .lt. p8b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h17b_1 - 1
     & + noab * (h16b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p15b_1 
     &- noab - 1)))))
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idima = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p15 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((p15 - 1) + int_mb(k_ra
     &nge+p15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h17 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_21_6_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_21_6_1',4,MA_ERR)
      IF ((p8b .lt. p4b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p4b_2 - no
     &ab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p19b_2 - noab - 1 + nv
     &ab * (h2b_2 - 1)))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p19 = 1,int_mb(k_range+p19b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      idimb = p4 + int_mb(k_range+p4b-1) * ((p8 - 1) + int_mb(k_range+p8
     &b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((h2 - 1))))
      idimb_sort = p8 + int_mb(k_range+p8b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((p4 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p4b .le. p8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (p19b_2 - noab - 1 + nv
     &ab * (h2b_2 - 1)))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p19 = 1,int_mb(k_range+p19b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p4 - 1) + int_mb(k_range+p4
     &b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((h2 - 1))))
      idimb_sort = p8 + int_mb(k_range+p8b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((p4 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',5
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda1_21_6_1',7,MA_ERR)
      IF ((p15b .le. p19b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p19 = 1,int_mb(k_range+p19b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      idimc_sort = p15 + int_mb(k_range+p15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h2 - 1) + 
     &int_mb(k_range+h2b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((p4
     & - 1))))))
      idimc = p4 + int_mb(k_range+p4b-1) * ((h17 - 1) + int_mb(k_range+h
     &17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p19 - 1) + int_mb
     &(k_range+p19b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h2 - 1)
     &)))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p4b - noab - 1 + nvab * (h17b - 1 + noab * (h16b - 1 + noab *
     & (p19b - noab - 1 + nvab * (p15b - noab - 1 + nvab * (h2b - 1)))))
     &))
      END IF
      IF ((p19b .le. p15b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p19 = 1,int_mb(k_range+p19b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      idimc_sort = p15 + int_mb(k_range+p15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h2 - 1) + 
     &int_mb(k_range+h2b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((p4
     & - 1))))))
      idimc = p4 + int_mb(k_range+p4b-1) * ((h17 - 1) + int_mb(k_range+h
     &17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p15 - 1) + int_mb
     &(k_range+p15b-1) * ((p19 - 1) + int_mb(k_range+p19b-1) * ((h2 - 1)
     &)))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p4b - noab - 1 + nvab * (h17b - 1 + noab * (h16b - 1 + noab *
     & (p15b - noab - 1 + nvab * (p19b - noab - 1 + nvab * (h2b - 1)))))
     &))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',8
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
