      SUBROUTINE ccsdtq_lambda2_23(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     $Id: ccsdtq_lambda2_23.F,v 1.2 2003-10-19 00:54:21 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 p1 p2 )_vty + = 1/4 * P( 2 ) * Sum ( p18 p13 h15 h17 h16 ) * y ( h3 h15 h16 h17 p1 p2 p13 p18 )_y * i1 ( h4 p13 p18 h15 h16 h17 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h4b
      INTEGER p1b
      INTEGER p2b
      INTEGER h15b
      INTEGER h16b
      INTEGER h17b
      INTEGER p13b
      INTEGER p18b
      INTEGER h3b_1
      INTEGER h15b_1
      INTEGER h16b_1
      INTEGER h17b_1
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p13b_1
      INTEGER p18b_1
      INTEGER h4b_2
      INTEGER p13b_2
      INTEGER p18b_2
      INTEGER h15b_2
      INTEGER h16b_2
      INTEGER h17b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER h15
      INTEGER h16
      INTEGER h17
      INTEGER h3
      INTEGER p13
      INTEGER p18
      INTEGER p1
      INTEGER p2
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h4
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsuperh(3)
      INTEGER isuperh
      INTEGER nsubp(2)
      INTEGER isubp
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h4b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1) .eq. int_mb(k_spin+p
     &1b-1)+int_mb(k_spin+p2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+p1b-1),int_mb(k_sym+p2b-1)))) .eq. ieor(irrep_v,ieor(irrep_t
     &,irrep_y))) THEN
      DO h15b = 1,noab
      DO h16b = h15b,noab
      DO h17b = h16b,noab
      DO p13b = noab+1,noab+nvab
      DO p18b = p13b,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+h17b-1) .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+p
     &2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p18b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb
     &(k_sym+h16b-1),ieor(int_mb(k_sym+h17b-1),ieor(int_mb(k_sym+p1b-1),
     &ieor(int_mb(k_sym+p2b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p1
     &8b-1)))))))) .eq. irrep_y) THEN
      IF ((restricted).and.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h15b-1)+i
     &nt_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1)+int_mb(k_spin+p1b-1)+in
     &t_mb(k_spin+p2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p18b-1).eq.
     &16)) THEN
      h3b_1 = int_mb(k_alpha+h3b-1)
      h15b_1 = int_mb(k_alpha+h15b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      h17b_1 = int_mb(k_alpha+h17b-1)
      p1b_1 = int_mb(k_alpha+p1b-1)
      p2b_1 = int_mb(k_alpha+p2b-1)
      p13b_1 = int_mb(k_alpha+p13b-1)
      p18b_1 = int_mb(k_alpha+p18b-1)
      ELSE
      h3b_1 = h3b
      h15b_1 = h15b
      h16b_1 = h16b
      h17b_1 = h17b
      p1b_1 = p1b
      p2b_1 = p2b
      p13b_1 = p13b
      p18b_1 = p18b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h4b-1)+int_mb(k_spin+p13b-1)+i
     &nt_mb(k_spin+p18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-1)+i
     &nt_mb(k_spin+h17b-1).eq.12)) THEN
      h4b_2 = int_mb(k_alpha+h4b-1)
      p13b_2 = int_mb(k_alpha+p13b-1)
      p18b_2 = int_mb(k_alpha+p18b-1)
      h15b_2 = int_mb(k_alpha+h15b-1)
      h16b_2 = int_mb(k_alpha+h16b-1)
      h17b_2 = int_mb(k_alpha+h17b-1)
      ELSE
      h4b_2 = h4b
      p13b_2 = p13b
      p18b_2 = p18b
      h15b_2 = h15b
      h16b_2 = h16b
      h17b_2 = h17b
      END IF
      dim_common = int_mb(k_range+h15b-1) * int_mb(k_range+h16b-1) * int
     &_mb(k_range+h17b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p18b
     &-1)
      dima_sort = int_mb(k_range+h3b-1) * int_mb(k_range+p1b-1) * int_mb
     &(k_range+p2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_23',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_23',1,MA_ERR)
      IF ((h17b .lt. h3b) .and. (p18b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h17b .lt. h3b) .and. (p13b .lt. p1b) .and. (p1b .le. p18b) .a
     &nd. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h17b .lt. h3b) .and. (p13b .lt. p1b) .and. (p2b .le. p18b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h17b .lt. h3b) .and. (p1b .le. p13b) .and. (p18b .lt. p2b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h17b .lt. h3b) .and. (p1b .le. p13b) .and. (p13b .lt. p2b) .a
     &nd. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h17b .lt. h3b) .and. (p2b .le. p13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h3b_1 - 1 + noab * (h17b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range
     &+p13b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h17 - 1) + 
     &int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p18b .lt. p1b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p13b .lt. p1b) .a
     &nd. (p1b .le. p18b) .and. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p13b .lt. p1b) .a
     &nd. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p1b .le. p13b) .a
     &nd. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p1b .le. p13b) .a
     &nd. (p13b .lt. p2b) .and. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h3b) .and. (h3b .le. h17b) .and. (p2b .le. p13b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h3b_1 - 1 +
     & noab * (h16b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range
     &+p13b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) +
     & int_mb(k_range+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p18b .lt. p1b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p13b .lt. p1b) .a
     &nd. (p1b .le. p18b) .and. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p13b .lt. p1b) .a
     &nd. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p1b .le. p13b) .a
     &nd. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p1b .le. p13b) .a
     &nd. (p13b .lt. p2b) .and. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h15b .lt. h3b) .and. (h3b .le. h16b) .and. (p2b .le. p13b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h3b_1 - 1 + noab * (h15b_1 - 1)))))))))
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range
     &+p13b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h
     &15 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p18b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p13b .lt. p1b) .and. (p1b .le. p18b) .a
     &nd. (p18b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p13b .lt. p1b) .and. (p2b .le. p18b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nv
     &ab * (p13b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p13 - 1) + int_mb(k
     &_range+p13b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p1b .le. p13b) .and. (p18b .lt. p2b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p2b_1 - no
     &ab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idima = p2 + int_mb(k_range+p2b-1) * ((p18 - 1) + int_mb(k_range+p
     &18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p1b .le. p13b) .and. (p13b .lt. p2b) .a
     &nd. (p2b .le. p18b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p2 - 1) + int_mb(k_range+
     &p2b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h15b) .and. (p2b .le. p13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p18b_1 - n
     &oab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + n
     &vab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_1 - 1 
     &+ noab * (h15b_1 - 1 + noab * (h3b_1 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      idima = p18 + int_mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range
     &+p13b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(
     &k_range+p1b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h16 - 1) 
     &+ int_mb(k_range+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * (
     &(h3 - 1))))))))
      idima_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h3 - 1) + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_range+p1b-1
     &) * ((p2 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_23',2,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_23',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda2_23',4,MA_ERR)
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + h17b_2 - 1
     & + noab * (h16b_2 - 1 + noab * (h15b_2 - 1 + noab * (p18b_2 - noab
     & - 1 + nvab * (p13b_2 - noab - 1 + nvab * (h4b_2 - 1)))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idimb = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * ((p18 - 1) + int_
     &mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h4 - 
     &1))))))
      idimb_sort = h15 + int_mb(k_range+h15b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((p13 - 1) +
     & int_mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((
     &h4 - 1))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda2_23',5,MA_
     &ERR)
      nsuperh(1) = 1
      nsuperh(2) = 1
      nsuperh(3) = 1
      isuperh = 1
      IF (h15b .eq. h16b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      IF (h16b .eq. h17b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      nsubp(1) = 1
      nsubp(2) = 1
      isubp = 1
      IF (p13b .eq. p18b) THEN
      nsubp(isubp) = nsubp(isubp) + 1
      ELSE
      isubp = isubp + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_23',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperh(1))/FACTORIAL(nsuperh(2))/FACTORIAL(nsuperh(3))/FACTORIAL
     &(nsubp(1))/FACTORIAL(nsubp(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda2_23',7,MA_ERR)
      IF ((h3b .le. h4b)) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idimc_sort = h3 + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_ran
     &ge+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((h4 - 1))))
      idimc = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h3 - 1))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/4.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p2b - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h4b - 1 + n
     &oab * (h3b - 1)))))
      END IF
      IF ((h4b .le. h3b)) THEN
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      idimc_sort = h3 + int_mb(k_range+h3b-1) * ((p1 - 1) + int_mb(k_ran
     &ge+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((h4 - 1))))
      idimc = p2 + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_range+p1
     &b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h4 - 1))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/4.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p2b - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h3b - 1 + n
     &oab * (h4b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_23',8,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_23',
     &9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda2_23',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_23',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
