      SUBROUTINE OFFSET_ccsdtq_lambda3_17_1(d_a,l_a_offset,k_a_offset,si
     &ze)
C     $Id: OFFSET_ccsdtq_lambda3_17_1.F,v 1.1 2003-09-16 21:51:27 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h5 h6 h10 h8 p1 p2 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h4b
      INTEGER h5b
      INTEGER h6b
      INTEGER h10b
      INTEGER p1b
      INTEGER p2b
      INTEGER h8b
      INTEGER p9b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab*noab*nvab*nvab*nva
     &b,'noname',l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda3_17
     &_1',0)
      size = 0
      DO h4b = 1,noab
      DO h5b = h4b,noab
      DO h6b = h5b,noab
      DO h10b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h8b = 1,noab
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h8b-1)+int_mb(k_spin+p1b
     &-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+h6b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h8b-1),ie
     &or(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),int_mb(k_sym+p9b-1
     &)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1
     &)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h8b-1)+
     &int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p9b-1).ne.
     &16)) THEN
      int_mb(k_a_offset + p9b - noab - 1 + nvab * (h8b - 1 + noab * (p2b
     & - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h10b - 1 + noab * (
     &h6b - 1 + noab * (h5b - 1 + noab * (h4b - 1)))))))) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+h5b-1) * int_
     &mb(k_range+h6b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p1b-1)
     & * int_mb(k_range+p2b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+
     &p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
