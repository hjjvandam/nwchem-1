      SUBROUTINE ccsdtq_lambda1_14_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda1_14_6.F,v 1.1 2003-09-16 21:51:35 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 p13 h14 h16 )_ytt + = -1 * t ( p13 h16 )_t * i2 ( h2 h14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p13b
      INTEGER h16b
      INTEGER h14b
      INTEGER p13b_1
      INTEGER h16b_1
      INTEGER h2b_2
      INTEGER h14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p13
      INTEGER h16
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h2
      INTEGER h14
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO h14b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h16b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+
     &h14b-1)+int_mb(k_spin+h16b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+h14b-1),int_mb(k_sym+h16b-1)))) .eq. ieor(irrep_y,ieor(irre
     &p_t,irrep_t))) THEN
      IF (int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+h16b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+h16b-1)) .eq. irrep_t) 
     &THEN
      IF ((restricted).and.(int_mb(k_spin+p13b-1)+int_mb(k_spin+h16b-1).
     &eq.4)) THEN
      p13b_1 = int_mb(k_alpha+p13b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      ELSE
      p13b_1 = p13b
      h16b_1 = h16b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h14b-1).e
     &q.4)) THEN
      h2b_2 = int_mb(k_alpha+h2b-1)
      h14b_2 = int_mb(k_alpha+h14b-1)
      ELSE
      h2b_2 = h2b
      h14b_2 = h14b
      END IF
      dim_common = 1
      dima_sort = int_mb(k_range+p13b-1) * int_mb(k_range+h16b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_14_6',0)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_14_6',1)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h16b_1 - 1
     & + noab * (p13b_1 - noab - 1)))
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      idima = h16 + int_mb(k_range+h16b-1) * ((p13 - 1))
      idima_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_14_6',2)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_14_6',3)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_14_6',4)
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + h14b_2 - 1
     & + noab * (h2b_2 - 1)))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idimb = h14 + int_mb(k_range+h14b-1) * ((h2 - 1))
      idimb_sort = h2 + int_mb(k_range+h2b-1) * ((h14 - 1))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_14_6',5)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_14_6',6)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda1_14_6',7)
      IF ((h14b .le. h16b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h14 - 1))))
      idimc = h16 + int_mb(k_range+h16b-1) * ((h14 - 1) + int_mb(k_range
     &+h14b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h2 - 1))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h16b - 1 + noab * (h14b - 1 + noab * (p13b - noab - 1 + nvab 
     &* (h2b - 1)))))
      END IF
      IF ((h16b .le. h14b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h14 = 1,int_mb(k_range+h14b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h14 - 1))))
      idimc = h14 + int_mb(k_range+h14b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h2 - 1))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h14b - 1 + noab * (h16b - 1 + noab * (p13b - noab - 1 + nvab 
     &* (h2b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_14_6',8)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_14_6
     &',9)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_14_6
     &',10)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_14_6
     &',11)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
