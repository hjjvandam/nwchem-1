      SUBROUTINE OFFSET_ccsdtq_lambda2_31_2_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda2_31_2_1.F,v 1.1 2003-09-16 21:51:24 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h3 h4 h7 h8 h12 p1 p5 p11 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h3b
      INTEGER h4b
      INTEGER h7b
      INTEGER h8b
      INTEGER p1b
      INTEGER h12b
      INTEGER p5b
      INTEGER p11b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab*noab*nvab*nvab*nva
     &b,'noname',l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda2_31
     &_2_1',0)
      size = 0
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO p1b = noab+1,noab+nvab
      DO h12b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p11b = p5b,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h7b-1)
     &+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h12b-1)+int_mb(k_spin+p1b
     &-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h12b-1),ie
     &or(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+p11b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h12b-1)+
     &int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p11b-1).ne
     &.16)) THEN
      int_mb(k_a_offset + p11b - noab - 1 + nvab * (p5b - noab - 1 + nva
     &b * (h12b - 1 + noab * (p1b - noab - 1 + nvab * (h8b - 1 + noab * 
     &(h7b - 1 + noab * (h4b - 1 + noab * (h3b - 1)))))))) = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_
     &mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+p1b-1) 
     &* int_mb(k_range+h12b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+
     &p11b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
