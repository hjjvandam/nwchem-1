      SUBROUTINE OFFSET_ccsdtq_lambda1_23_3_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda1_23_3_1.F,v 1.1 2003-09-16 21:51:13 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h4 p14 h16 p1 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h4b
      INTEGER p14b
      INTEGER p1b
      INTEGER h16b
      IF (.not.MA_PUSH_GET(mt_int,noab*nvab*noab*nvab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda1_23_3_1',0)
      size = 0
      DO h4b = 1,noab
      DO p14b = noab+1,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO h16b = 1,noab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin+
     &h16b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_mb
     &(k_sym+h16b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+p14b-
     &1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      int_mb(k_a_offset + h16b - 1 + noab * (p1b - noab - 1 + nvab * (p1
     &4b - noab - 1 + nvab * (h4b - 1)))) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+p14b-1) * int
     &_mb(k_range+p1b-1) * int_mb(k_range+h16b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
