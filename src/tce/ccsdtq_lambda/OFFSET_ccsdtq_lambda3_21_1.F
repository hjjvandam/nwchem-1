      SUBROUTINE OFFSET_ccsdtq_lambda3_21_1(d_a,l_a_offset,k_a_offset,si
     &ze)
C     $Id: OFFSET_ccsdtq_lambda3_21_1.F,v 1.1 2003-09-16 21:51:27 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h5 p8 p1 p2 p11 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h4b
      INTEGER h5b
      INTEGER p8b
      INTEGER p1b
      INTEGER p2b
      INTEGER p11b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*nvab*nvab*nvab*nvab,'noname'
     &,l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda3_21_1',0)
      size = 0
      DO h4b = 1,noab
      DO h5b = h4b,noab
      DO p8b = noab+1,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+p8b-1)
     & .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p11b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),int
     &_mb(k_sym+p11b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1
     &)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+i
     &nt_mb(k_spin+p11b-1).ne.12)) THEN
      int_mb(k_a_offset + p11b - noab - 1 + nvab * (p2b - noab - 1 + nva
     &b * (p1b - noab - 1 + nvab * (p8b - noab - 1 + nvab * (h5b - 1 + n
     &oab * (h4b - 1)))))) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+h5b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) 
     &* int_mb(k_range+p11b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
