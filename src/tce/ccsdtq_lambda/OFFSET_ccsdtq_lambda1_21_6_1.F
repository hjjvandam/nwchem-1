      SUBROUTINE OFFSET_ccsdtq_lambda1_21_6_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda1_21_6_1.F,v 1.2 2003-10-19 00:53:46 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 p15 p19 h16 h17 p4 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h2b
      INTEGER p15b
      INTEGER p19b
      INTEGER h16b
      INTEGER h17b
      INTEGER p4b
      IF (.not.MA_PUSH_GET(mt_int,noab*nvab*nvab*noab*noab*nvab,'noname'
     &,l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',0,MA
     &_ERR)
      size = 0
      DO h2b = 1,noab
      DO p15b = noab+1,noab+nvab
      DO p19b = p15b,noab+nvab
      DO h16b = 1,noab
      DO h17b = h16b,noab
      DO p4b = noab+1,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p19b-
     &1) .eq. int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1)+int_mb(k_spin+
     &p4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_mb
     &(k_sym+p19b-1),ieor(int_mb(k_sym+h16b-1),ieor(int_mb(k_sym+h17b-1)
     &,int_mb(k_sym+p4b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-
     &1)+int_mb(k_spin+p19b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-
     &1)+int_mb(k_spin+p4b-1).ne.12)) THEN
      int_mb(k_a_offset + p4b - noab - 1 + nvab * (h17b - 1 + noab * (h1
     &6b - 1 + noab * (p19b - noab - 1 + nvab * (p15b - noab - 1 + nvab 
     &* (h2b - 1)))))) = size
      size = size + int_mb(k_range+h2b-1) * int_mb(k_range+p15b-1) * int
     &_mb(k_range+p19b-1) * int_mb(k_range+h16b-1) * int_mb(k_range+h17b
     &-1) * int_mb(k_range+p4b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
