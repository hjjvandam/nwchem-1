      SUBROUTINE OFFSET_ccsdtq_lambda3_12_7_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdtq_lambda3_12_7_1.F,v 1.2 2003-10-19 00:53:55 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h12 p15 h14 p1 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h12b
      INTEGER p15b
      INTEGER p1b
      INTEGER h14b
      IF (.not.MA_PUSH_GET(mt_int,noab*nvab*noab*nvab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda3_12_7_1',0,MA_ERR)
      size = 0
      DO h12b = 1,noab
      DO p15b = noab+1,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO h14b = 1,noab
      IF (int_mb(k_spin+h12b-1)+int_mb(k_spin+p15b-1) .eq. int_mb(k_spin
     &+h14b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_m
     &b(k_sym+h14b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_v,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h12b-1)+int_mb(k_spin+p15b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      int_mb(k_a_offset + h14b - 1 + noab * (p1b - noab - 1 + nvab * (p1
     &5b - noab - 1 + nvab * (h12b - 1)))) = size
      size = size + int_mb(k_range+h12b-1) * int_mb(k_range+p15b-1) * in
     &t_mb(k_range+p1b-1) * int_mb(k_range+h14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
