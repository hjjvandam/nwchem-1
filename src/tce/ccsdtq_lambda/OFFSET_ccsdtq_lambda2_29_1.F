      SUBROUTINE OFFSET_ccsdtq_lambda2_29_1(d_a,l_a_offset,k_a_offset,si
     &ze)
C     $Id: OFFSET_ccsdtq_lambda2_29_1.F,v 1.1 2003-09-16 21:51:23 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p13 p14 p1 p2 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER p13b
      INTEGER p14b
      INTEGER p1b
      INTEGER p2b
      IF (.not.MA_PUSH_GET(mt_int,nvab*nvab*nvab*nvab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('ccsdtq_lambda2_29_1',0)
      size = 0
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin
     &+p1b-1)+int_mb(k_spin+p2b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_m
     &b(k_sym+p1b-1),int_mb(k_sym+p2b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b
     &-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1).ne.8)) THEN
      int_mb(k_a_offset + p2b - noab - 1 + nvab * (p1b - noab - 1 + nvab
     & * (p14b - noab - 1 + nvab * (p13b - noab - 1)))) = size
      size = size + int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1) * in
     &t_mb(k_range+p1b-1) * int_mb(k_range+p2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
