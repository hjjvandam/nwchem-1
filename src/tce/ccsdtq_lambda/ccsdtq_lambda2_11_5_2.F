      SUBROUTINE ccsdtq_lambda2_11_5_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_lambda2_11_5_2.F,v 1.1 2003-09-16 21:52:10 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h3 h8 h11 p6 )_vt + = -1 * Sum ( p9 ) * t ( p9 h11 )_t * v ( h3 h8 p6 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h8b
      INTEGER h11b
      INTEGER p6b
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h11b_1
      INTEGER h3b_2
      INTEGER h8b_2
      INTEGER p6b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p9
      INTEGER h11
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h8
      INTEGER h3
      INTEGER p6
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h8b = 1,noab
      DO h11b = 1,noab
      DO p6b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h11b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h
     &11b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h11b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h11b-1)) .eq. irrep_t) T
     &HEN
      IF ((restricted).and.(int_mb(k_spin+p9b-1)+int_mb(k_spin+h11b-1).e
     &q.4)) THEN
      p9b_1 = int_mb(k_alpha+p9b-1)
      h11b_1 = int_mb(k_alpha+h11b-1)
      ELSE
      p9b_1 = p9b
      h11b_1 = h11b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h8b-1)+in
     &t_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1).eq.8)) THEN
      h3b_2 = int_mb(k_alpha+h3b-1)
      h8b_2 = int_mb(k_alpha+h8b-1)
      p6b_2 = int_mb(k_alpha+p6b-1)
      p9b_2 = int_mb(k_alpha+p9b-1)
      ELSE
      h3b_2 = h3b
      h8b_2 = h8b
      p6b_2 = p6b
      p9b_2 = p9b
      END IF
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h11b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_11_5_2',0)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_11_5_2',1)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h11b_1 - 1
     & + noab * (p9b_1 - noab - 1)))
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idima = h11 + int_mb(k_range+h11b-1) * ((p9 - 1))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h11 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_11_5_2',2
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_11_5_2',3)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda2_11_5_2',4)
      IF ((h8b .lt. h3b) .and. (p9b .lt. p6b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - 1 
     &+ (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h3b_2 - 1 + (noab+nvab
     &) * (h8b_2 - 1)))))
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((p9 - 1) + int_mb(k_range+p9
     &b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h8 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h3 - 1) + int_mb(k_ran
     &ge+h3b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h8b .lt. h3b) .and. (p6b .le. p9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p9b_2 - 1 
     &+ (noab+nvab) * (p6b_2 - 1 + (noab+nvab) * (h3b_2 - 1 + (noab+nvab
     &) * (h8b_2 - 1)))))
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimb = p9 + int_mb(k_range+p9b-1) * ((p6 - 1) + int_mb(k_range+p6
     &b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h8 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h3 - 1) + int_mb(k_ran
     &ge+h3b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - 1 
     &+ (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab+nvab
     &) * (h3b_2 - 1)))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((p9 - 1) + int_mb(k_range+p9
     &b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h3 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h3 - 1) + int_mb(k_ran
     &ge+h3b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h8b) .and. (p6b .le. p9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p9b_2 - 1 
     &+ (noab+nvab) * (p6b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab+nvab
     &) * (h3b_2 - 1)))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimb = p9 + int_mb(k_range+p9b-1) * ((p6 - 1) + int_mb(k_range+p6
     &b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h3 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h3 - 1) + int_mb(k_ran
     &ge+h3b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda2_11_5_2',5
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_5_2',6)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda2_11_5_2',7)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimc_sort = h11 + int_mb(k_range+h11b-1) * ((h3 - 1) + int_mb(k_r
     &ange+h3b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((p6 - 1))))
      idimc = p6 + int_mb(k_range+p6b-1) * ((h11 - 1) + int_mb(k_range+h
     &11b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h3 - 1))))
      dbl_mb(k_c + idimc - 1) = - dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p6b - noab - 1 + nvab * (h11b - 1 + noab * (h8b - 1 + noab * 
     &(h3b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_11_5_2',8
     &)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_5
     &_2',9)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_5
     &_2',10)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_5
     &_2',11)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
