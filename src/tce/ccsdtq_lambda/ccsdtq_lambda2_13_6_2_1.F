      SUBROUTINE ccsdtq_lambda2_13_6_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: ccsdtq_lambda2_13_6_2_1.F,v 1.2 2003-10-19 00:54:17 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h8 h10 h15 p6 )_v + = 1 * v ( h8 h10 h15 p6 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h8b
      INTEGER h10b
      INTEGER h15b
      INTEGER p6b
      INTEGER h8b_1
      INTEGER h10b_1
      INTEGER h15b_1
      INTEGER p6b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER h8
      INTEGER h10
      INTEGER h15
      INTEGER p6
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h8b = 1,noab
      DO h10b = h8b,noab
      DO h15b = 1,noab
      DO p6b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+
     &h15b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h15b-1),int_mb(k_sym+p6b-1)))) .eq. irrep_v) THEN
      IF ((restricted).and.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+h15b-1)+int_mb(k_spin+p6b-1).eq.8)) THEN
      h8b_1 = int_mb(k_alpha+h8b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      h15b_1 = int_mb(k_alpha+h15b-1)
      p6b_1 = int_mb(k_alpha+p6b-1)
      ELSE
      h8b_1 = h8b
      h10b_1 = h10b
      h15b_1 = h15b
      p6b_1 = p6b
      END IF
      dim_common = 1
      dima_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h15b-1) * int_mb(k_range+p6b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_13_6_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_13_6_2_1',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p6b_1 - 1 
     &+ (noab+nvab) * (h15b_1 - 1 + (noab+nvab) * (h10b_1 - 1 + (noab+nv
     &ab) * (h8b_1 - 1)))))
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idima = p6 + int_mb(k_range+p6b-1) * ((h15 - 1) + int_mb(k_range+h
     &15b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h8 - 1))))
      idima_sort = h8 + int_mb(k_range+h8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * ((p6 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_13_6_2_1'
     &,2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort,'noname',l_c,k_c)) CALL ERRQ
     &UIT('ccsdtq_lambda2_13_6_2_1',3,MA_ERR)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idima_sort = h8 + int_mb(k_range+h8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * ((p6 - 1))))
      idimc = p6 + int_mb(k_range+p6b-1) * ((h15 - 1) + int_mb(k_range+h
     &15b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h8 - 1))))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_a_sort + idima_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort,int_mb(k_c_offset + p6b -
     & noab - 1 + nvab * (h15b - 1 + noab * (h10b - 1 + noab * (h8b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_13_6_2_1'
     &,4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_13_6
     &_2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
