      SUBROUTINE ccsdtq_lambda2_14_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda2_14_4.F,v 1.1 2003-09-16 21:52:17 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h3 h13 )_yt + = -1/144 * Sum ( h11 h10 h9 p8 p7 p6 p5 ) * t ( p5 p6 p7 p8 h9 h10 h11 h13 )_t * y ( h3 h9 h10 h11 p5 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h13b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h3b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p5
      INTEGER p6
      INTEGER p7
      INTEGER p8
      INTEGER h9
      INTEGER h10
      INTEGER h11
      INTEGER h13
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h3
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h13b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h13b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+h9b
     &-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h13b-1),ie
     &or(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h11b
     &-1)))))))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+in
     &t_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+h13b-1)+int_
     &mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1).eq.16
     &)) THEN
      p5b_1 = int_mb(k_alpha+p5b-1)
      p6b_1 = int_mb(k_alpha+p6b-1)
      p7b_1 = int_mb(k_alpha+p7b-1)
      p8b_1 = int_mb(k_alpha+p8b-1)
      h13b_1 = int_mb(k_alpha+h13b-1)
      h9b_1 = int_mb(k_alpha+h9b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      h11b_1 = int_mb(k_alpha+h11b-1)
      ELSE
      p5b_1 = p5b
      p6b_1 = p6b
      p7b_1 = p7b
      p8b_1 = p8b
      h13b_1 = h13b
      h9b_1 = h9b
      h10b_1 = h10b
      h11b_1 = h11b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h9b-1)+in
     &t_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+p5b-1)+int
     &_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).eq.16)
     &) THEN
      h3b_2 = int_mb(k_alpha+h3b-1)
      h9b_2 = int_mb(k_alpha+h9b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      h11b_2 = int_mb(k_alpha+h11b-1)
      p5b_2 = int_mb(k_alpha+p5b-1)
      p6b_2 = int_mb(k_alpha+p6b-1)
      p7b_2 = int_mb(k_alpha+p7b-1)
      p8b_2 = int_mb(k_alpha+p8b-1)
      ELSE
      h3b_2 = h3b
      h9b_2 = h9b
      h10b_2 = h10b
      h11b_2 = h11b
      p5b_2 = p5b
      p6b_2 = p6b
      p7b_2 = p7b
      p8b_2 = p8b
      END IF
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+h13b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_14_4',0)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_14_4',1)
      IF ((h11b .le. h13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h13b_1 - 1
     & + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + n
     &oab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1
     & - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      idima = h13 + int_mb(k_range+h13b-1) * ((h11 - 1) + int_mb(k_range
     &+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1) + int_m
     &b(k_range+h9b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p7 - 1) +
     & int_mb(k_range+p7b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 
     &- 1))))))))
      idima_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h13 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h11b_1 - 1
     & + noab * (h13b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + n
     &oab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1
     & - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idima = h11 + int_mb(k_range+h11b-1) * ((h13 - 1) + int_mb(k_range
     &+h13b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1) + int_m
     &b(k_range+h9b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p7 - 1) +
     & int_mb(k_range+p7b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 
     &- 1))))))))
      idima_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h13 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h9b .le. h13b) .and. (h13b .lt. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h11b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (h13b_1 - 1 + noab * (h9b_1 - 1 + n
     &oab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1
     & - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idima = h11 + int_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h9 - 1) + int_m
     &b(k_range+h9b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p7 - 1) +
     & int_mb(k_range+p7b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 
     &- 1))))))))
      idima_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h13 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h9b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h11b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h13b_1 - 1 + n
     &oab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1
     & - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idima = h11 + int_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h13 - 1) + int_mb
     &(k_range+h13b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p7 - 1) +
     & int_mb(k_range+p7b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 
     &- 1))))))))
      idima_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h13 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_14_4',2)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_14_4',3)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda2_14_4',4)
      IF ((h11b .lt. h3b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h11 - 1) + int_
     &mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 
     &1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h3 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .lt. h3b) .and. (h3b .le. h11b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h3b_2 - 1 + n
     &oab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h3 - 1) + int
     &_mb(k_range+h3b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 
     &1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h3 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h9b .lt. h3b) .and. (h3b .le. h10b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 - 1 + 
     &noab * (h3b_2 - 1 + noab * (h9b_2 - 1)))))))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 - 1) + in
     &t_mb(k_range+h10b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h9 - 
     &1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h3 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 - 1 + 
     &noab * (h9b_2 - 1 + noab * (h3b_2 - 1)))))))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 - 1) + in
     &t_mb(k_range+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h3 - 
     &1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p8 - 1) + int_mb
     &(k_range+p8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1) +
     & int_mb(k_range+h10b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((
     &h3 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda2_14_4',5)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_14_4',6)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(ns
     &ubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_lambda2_14_4',7)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      idimc_sort = h13 + int_mb(k_range+h13b-1) * ((h3 - 1))
      idimc = h13 + int_mb(k_range+h13b-1) * ((h3 - 1))
      dbl_mb(k_c + idimc - 1) = -1.0d0/144.0d0 * dbl_mb(k_c_sort + idimc
     &_sort - 1)
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h13b - 1 + noab * (h3b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_14_4',8)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_14_4
     &',9)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda2_14_4
     &',10)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_14_4
     &',11)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
