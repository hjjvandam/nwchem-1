      SUBROUTINE mbpt3_t2(d_e20,d_f1,d_i0,d_t12,d_t21,d_t22,d_t23,d_t24,
     &d_t31,d_t32,d_v2,k_e20_offset,k_f1_offset,k_i0_offset,k_t12_offset
     &,k_t21_offset,k_t22_offset,k_t23_offset,k_t24_offset,k_t31_offset,
     &k_t32_offset,k_v2_offset)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 4 ) * t3 ( p1 h9 )_t3 * f ( p2 h10 )_f
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 2 ) * Sum ( h3 ) * t3 ( p1 p2 h3 h9 )_t3 * f ( h3 h10 )_f
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 2 ) * Sum ( p3 ) * t3 ( p1 p3 h9 h10 )_t3 * f ( p2 p3 )_f
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1 * P( 2 ) * Sum ( h3 ) * t2 ( p1 h3 )_t2 * v ( h3 p2 h9 h10 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1 * P( 2 ) * Sum ( p3 ) * t2 ( p3 h9 )_t2 * v ( p1 p2 h10 p3 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/2 * Sum ( h3 h4 ) * t2 ( p1 p2 h3 h4 )_t2 * v ( h3 h4 h9 h10 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1 * P( 4 ) * Sum ( h4 p3 ) * t2 ( p1 p3 h4 h9 )_t2 * v ( h4 p2 h10 p3 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/2 * Sum ( p3 p4 ) * t2 ( p3 p4 h9 h10 )_t2 * v ( p1 p2 p3 p4 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1/2 * P( 2 ) * Sum ( h4 h5 p3 ) * t2 ( p1 p2 p3 h4 h5 h9 )_t2 * v ( h4 h5 h10 p3 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1/2 * P( 2 ) * Sum ( h5 p3 p4 ) * t2 ( p1 p3 p4 h5 h9 h10 )_t2 * v ( h5 p2 p3 p4 )_v
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/4 * Sum ( h5 h6 p3 p4 ) * t2 ( p1 p2 p3 p4 h5 h6 h9 h10 )_t2 * v ( h5 h6 p3 p4 )_v
C     i0 ( p1 p2 h9 h10 )_t1e2 + = -1 * e2 ( )_e2 * t1 ( p1 p2 h9 h10 )_t1
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t31
      INTEGER k_t31_offset
      INTEGER d_f1
      INTEGER k_f1_offset
      INTEGER d_t32
      INTEGER k_t32_offset
      INTEGER d_t21
      INTEGER k_t21_offset
      INTEGER d_v2
      INTEGER k_v2_offset
      INTEGER d_t22
      INTEGER k_t22_offset
      INTEGER d_t23
      INTEGER k_t23_offset
      INTEGER d_t24
      INTEGER k_t24_offset
      INTEGER d_e20
      INTEGER k_e20_offset
      INTEGER d_t12
      INTEGER k_t12_offset
      CALL mbpt3_t2_1(d_t31,k_t31_offset,d_f1,k_f1_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_2(d_t32,k_t32_offset,d_f1,k_f1_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_3(d_t32,k_t32_offset,d_f1,k_f1_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_4(d_t21,k_t21_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_5(d_t21,k_t21_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_6(d_t22,k_t22_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_7(d_t22,k_t22_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_8(d_t22,k_t22_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_9(d_t23,k_t23_offset,d_v2,k_v2_offset,d_i0,k_i0_offs
     &et)
      CALL mbpt3_t2_10(d_t23,k_t23_offset,d_v2,k_v2_offset,d_i0,k_i0_off
     &set)
      CALL mbpt3_t2_11(d_t24,k_t24_offset,d_v2,k_v2_offset,d_i0,k_i0_off
     &set)
      CALL mbpt3_t2_12(d_e20,k_e20_offset,d_t12,k_t12_offset,d_i0,k_i0_o
     &ffset)
      RETURN
      END
      SUBROUTINE mbpt3_t2_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 4 ) * t3 ( p1 h9 )_t3 * f ( p2 h10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b_1
      INTEGER h9b_1
      INTEGER p2b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_t3,irrep_f)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t3) T
     &HEN
      CALL TCE_RESTRICTED_2(p1b,h9b,p1b_1,h9b_1)
      CALL TCE_RESTRICTED_2(p2b,h10b,p2b_2,h10b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h9b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p2b-1) * int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p1b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + (noab+nvab) * (p2b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h10b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_1',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_1',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_1',9,MA_ERR)
      IF ((p1b .le. p2b) .and. (h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,2,3,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p1b .le. p2b) .and. (h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,2,1,3,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b) .and. (h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),2,4,3,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b) .and. (h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),2,4,1,3,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_1',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 2 ) * Sum ( h3 ) * t3 ( p1 p2 h3 h9 )_t3 * f ( h3 h10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h3b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER h9b_1
      INTEGER h3b_1
      INTEGER h3b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_t3,irrep_f)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h3b = 1,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h3b-1)))) .eq. irrep_t3) THEN
      CALL TCE_RESTRICTED_4(p1b,p2b,h9b,h3b,p1b_1,p2b_1,h9b_1,h3b_1)
      CALL TCE_RESTRICTED_2(h3b,h10b,h3b_2,h10b_2)
      dim_common = int_mb(k_range+h3b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb
     &(k_range+h9b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_2',2,MA_ERR)
      IF ((h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,4,2,1,3,1.0d0)
      END IF
      IF ((h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + (noab+nvab) * (h3b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h10b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_2',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_2',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_2',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_2',9,MA_ERR)
      IF ((h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,1,2,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_2',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_t3f + = 1 * P( 2 ) * Sum ( p3 ) * t3 ( p1 p3 h9 h10 )_t3 * f ( p2 p3 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p1b_1
      INTEGER p3b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER p2b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_t3,irrep_f)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t3) THEN
      CALL TCE_RESTRICTED_4(p1b,p3b,h9b,h10b,p1b_1,p3b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_2(p2b,p3b,p2b_2,p3b_2)
      dim_common = int_mb(k_range+p3b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_3',2,MA_ERR)
      IF ((p3b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((p1b .le. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - 1 + (noab+nvab) * (p2b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p2b-1)
     &,int_mb(k_range+p3b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_3',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_3',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_3',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_3',9,MA_ERR)
      IF ((p1b .le. p2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,1,3,2,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),1,4,3,2,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_3',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1 * P( 2 ) * Sum ( h3 ) * t2 ( p1 h3 )_t2 * v ( h3 p2 h9 h10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h3b
      INTEGER p1b_1
      INTEGER h3b_1
      INTEGER p2b_2
      INTEGER h3b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h3b = 1,noab
      IF (int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),int_mb(k_sym+h3b-1)) .eq. irrep_t2) T
     &HEN
      CALL TCE_RESTRICTED_2(p1b,h3b,p1b_1,h3b_1)
      CALL TCE_RESTRICTED_4(p2b,h3b,h9b,h10b,p2b_2,h3b_2,h9b_2,h10b_2)
      dim_common = int_mb(k_range+h3b-1)
      dima_sort = int_mb(k_range+p1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p2b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h3b_1
     & - 1 + noab * (p1b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h3b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_4',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_4',5,MA_ERR)
      IF ((h3b .le. p2b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab+nvab) * (p2b_2 - 1 + (noa
     &b+nvab) * (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_4',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_4',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_4',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_4',9,MA_ERR)
      IF ((p1b .le. p2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),3,4,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_4',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_4',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1 * P( 2 ) * Sum ( p3 ) * t2 ( p3 h9 )_t2 * v ( p1 p2 h10 p3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p3b_1
      INTEGER h9b_1
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER h10b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t2) T
     &HEN
      CALL TCE_RESTRICTED_2(p3b,h9b,p3b_1,h9b_1)
      CALL TCE_RESTRICTED_4(p1b,p2b,h10b,p3b,p1b_2,p2b_2,h10b_2,p3b_2)
      dim_common = int_mb(k_range+p3b-1)
      dima_sort = int_mb(k_range+h9b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb
     &(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_5',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_5',5,MA_ERR)
      IF ((h10b .le. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nvab) * (p2b_2 - 1 + (noa
     &b+nvab) * (p1b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h10b-1),int_mb(k_range+p3b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_5',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_5',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_5',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_5',9,MA_ERR)
      IF ((h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1),int_mb(k_range+h9b-1
     &),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1),int_mb(k_range+h9b-1
     &),3,2,1,4,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_5',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_5',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/2 * Sum ( h3 h4 ) * t2 ( p1 p2 h3 h4 )_t2 * v ( h3 h4 h9 h10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h3b
      INTEGER h4b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER h3b_1
      INTEGER h4b_1
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h3b = 1,noab
      DO h4b = h3b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h3b-1),int_mb(k_sym+h4b-1)))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_4(p1b,p2b,h3b,h4b,p1b_1,p2b_1,h3b_1,h4b_1)
      CALL TCE_RESTRICTED_4(h3b,h4b,h9b,h10b,h3b_2,h4b_2,h9b_2,h10b_2)
      dim_common = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_6',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab+nvab) * (h4b_2 - 1 + (noa
     &b+nvab) * (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_6',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h3b .eq. h4b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_6',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_6',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_6',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_6',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_6',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1 * P( 4 ) * Sum ( h4 p3 ) * t2 ( p1 p3 h4 h9 )_t2 * v ( h4 p2 h10 p3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER h4b
      INTEGER p1b_1
      INTEGER p3b_1
      INTEGER h9b_1
      INTEGER h4b_1
      INTEGER p2b_2
      INTEGER h4b_2
      INTEGER h10b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO h4b = 1,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h4b-1)))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_4(p1b,p3b,h9b,h4b,p1b_1,p3b_1,h9b_1,h4b_1)
      CALL TCE_RESTRICTED_4(p2b,h4b,h10b,p3b,p2b_2,h4b_2,h10b_2,p3b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+h4b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h9b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p2b-1) * int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_7',2,MA_ERR)
      IF ((p3b .lt. p1b) .and. (h4b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1)
     &,4,2,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (h9b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h4b-1)
     &,3,2,4,1,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (h4b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1)
     &,4,1,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (h9b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h9b-1),int_mb(k_range+h4b-1)
     &,3,1,4,2,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_7',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_7',5,MA_ERR)
      IF ((h4b .le. p2b) .and. (h10b .le. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nvab) * (p2b_2 - 1 + (noa
     &b+nvab) * (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h10b-1),int_mb(k_range+p3b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_7',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_7',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_7',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_7',9,MA_ERR)
      IF ((p1b .le. p2b) .and. (h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,2,3,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p1b .le. p2b) .and. (h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,2,1,3,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b) .and. (h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),2,4,3,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b) .and. (h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),2,4,1,3,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_7',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_7',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_8(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/2 * Sum ( p3 p4 ) * t2 ( p3 p4 h9 h10 )_t2 * v ( p1 p2 p3 p4 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p4b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_8',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_4(p3b,p4b,h9b,h10b,p3b_1,p4b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_4(p1b,p2b,p3b,p4b,p1b_2,p2b_2,p3b_2,p4b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dima_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_8',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_8',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_8',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - 1 + (noab+nvab) * (p3b_2 - 1 + (noab+nvab) * (p2b_2 - 1 + (noab
     &+nvab) * (p1b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_8',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p3b .eq. p4b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_8',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_8',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_8',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p2b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h9b-1
     &),2,1,4,3,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_8',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_8',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_9(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset
     &)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1/2 * P( 2 ) * Sum ( h4 h5 p3 ) * t2 ( p1 p2 p3 h4 h5 h9 )_t2 * v ( h4 h5 h10 p3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER h4b
      INTEGER h5b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p3b_1
      INTEGER h9b_1
      INTEGER h4b_1
      INTEGER h5b_1
      INTEGER h4b_2
      INTEGER h5b_2
      INTEGER h10b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_9',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO h4b = 1,noab
      DO h5b = h4b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h9b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h4b-1),int
     &_mb(k_sym+h5b-1)))))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_6(p1b,p2b,p3b,h9b,h4b,h5b,p1b_1,p2b_1,p3b_1,h9
     &b_1,h4b_1,h5b_1)
      CALL TCE_RESTRICTED_4(h4b,h5b,h10b,p3b,h4b_2,h5b_2,h10b_2,p3b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+h4b-1) * int_m
     &b(k_range+h5b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb
     &(k_range+h9b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_9',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_9',2,MA_ERR)
      IF ((p3b .lt. p1b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),6,3,2,5,4,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (h4b .le. h9b) .and. (h9b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),5,3,2,6,4,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (h9b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h9b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,3,2,6,5,1,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),6,3,1,5,4,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (h4b .le. h9b) .and.
     & (h9b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),5,3,1,6,4,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (h9b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h9b_1 - 1 + noab * (p2b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,3,1,6,5,2,-1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),6,2,1,5,4,3,1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h4b .le. h9b) .and. (h9b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h4b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),5,2,1,6,4,3,-1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h9b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,2,1,6,5,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_9',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_9',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_9',5,MA_ERR)
      IF ((h10b .le. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nvab) * (h5b_2 - 1 + (noa
     &b+nvab) * (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h10b-1),int_mb(k_range+p3b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_9',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h4b .eq. h5b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_9',7,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_9',8,MA_ER
     &R)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_9',9,MA_ERR)
      IF ((h9b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((h10b .le. h9b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,1,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h9b -
     & 1 + noab * (h10b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_9',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_9',11,MA_E
     &RR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_10(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = -1/2 * P( 2 ) * Sum ( h5 p3 p4 ) * t2 ( p1 p3 p4 h5 h9 h10 )_t2 * v ( h5 p2 p3 p4 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p4b
      INTEGER h5b
      INTEGER p1b_1
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h5b_1
      INTEGER p2b_2
      INTEGER h5b_2
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_10',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h5b = 1,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)
     & .eq. int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h5b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(
     &k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),in
     &t_mb(k_sym+h5b-1)))))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_6(p1b,p3b,p4b,h9b,h10b,h5b,p1b_1,p3b_1,p4b_1,h
     &9b_1,h10b_1,h5b_1)
      CALL TCE_RESTRICTED_4(p2b,h5b,p3b,p4b,p2b_2,h5b_2,p3b_2,p4b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_m
     &b(k_range+h5b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_10',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_10',2,MA_ERR)
      IF ((p4b .lt. p1b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 + noab * (p1b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),6,5,3,4,2,1,1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h9b .lt. h5b) .and. (h5b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 + noab * (p1b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h10b-1),6,4,3,5,2,1,-1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p1b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h5b-1),5,4,3,6,2,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),6,5,2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (h9b .lt. h5b) .and.
     & (h5b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h10b-1),6,4,2,5,3,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (h10b .lt. h5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h5b-1),5,4,2,6,3,1,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (h5b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),6,5,1,4,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (h9b .lt. h5b) .and. (h5b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h10b-1),6,4,1,5,3,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h5b-1),5,4,1,6,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_10',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_10',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_10',5,MA_ERR)
      IF ((h5b .le. p2b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - 1 + (noab+nvab) * (p3b_2 - 1 + (noab+nvab) * (p2b_2 - 1 + (noab
     &+nvab) * (h5b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,2,1,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_10',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p3b .eq. p4b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_10',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_10',8,MA_E
     &RR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_10',9,MA_ERR)
      IF ((p1b .le. p2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),4,1,3,2,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      END IF
      IF ((p2b .le. p1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1
     &),1,4,3,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p1b - noab - 1 + nvab * (p2b - noa
     &b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_10',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_10',11,MA_
     &ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_11(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_vt2 + = 1/4 * Sum ( h5 h6 p3 p4 ) * t2 ( p1 p2 p3 p4 h5 h6 h9 h10 )_t2 * v ( h5 h6 p3 p4 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p4b
      INTEGER h5b
      INTEGER h6b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h5b_1
      INTEGER h6b_1
      INTEGER h5b_2
      INTEGER h6b_2
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_v,irrep_t2)) 
     &THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_11',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h5b = 1,noab
      DO h6b = h5b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-1)
     &+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b
     &-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieo
     &r(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h5b-1),int_mb(k_sym+h6b-1
     &)))))))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_8(p1b,p2b,p3b,p4b,h9b,h10b,h5b,h6b,p1b_1,p2b_1
     &,p3b_1,p4b_1,h9b_1,h10b_1,h5b_1,h6b_1)
      CALL TCE_RESTRICTED_4(h5b,h6b,p3b,p4b,h5b_2,h6b_2,p3b_2,p4b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_m
     &b(k_range+h5b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_11',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_11',2,MA_ERR)
      IF ((p4b .lt. p1b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h5b .le. h9b) .and. (h9b .lt. h6b) .and.
     & (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,4,3,7,5,2,1,-1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h5b .le. h9b) .and. (h10b .lt. h6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,4,3,8,5,2,1,1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h9b .lt. h5b) .and. (h6b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,4,3,7,6,2,1,1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h9b .lt. h5b) .and. (h5b .le. h10b) .and
     &. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,4,3,8,6,2,1,-1.0d0)
      END IF
      IF ((p4b .lt. p1b) .and. (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,4,3,8,7,2,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h5b .le. h9b) .and. (h9b .lt. h6b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,4,2,7,5,3,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h5b .le. h9b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,4,2,8,5,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h9b .lt. h5b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,4,2,7,6,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h9b .lt. h5b) .and. (h5b .le. h10b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,4,2,8,6,3,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p1b .le. p4b) .and. (p4b .lt. p2b) .and.
     & (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,4,2,8,7,3,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,3,2,6,5,4,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h5b .le. h9b) .and.
     & (h9b .lt. h6b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,3,2,7,5,4,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h5b .le. h9b) .and.
     & (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,3,2,8,5,4,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h9b .lt. h5b) .and.
     & (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,3,2,7,6,4,1,1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h9b .lt. h5b) .and.
     & (h5b .le. h10b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,3,2,8,6,4,1,-1.0d0)
      END IF
      IF ((p3b .lt. p1b) .and. (p2b .le. p4b) .and. (h10b .lt. h5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,3,2,8,7,4,1,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,4,1,6,5,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h5b .le. h9b) .and.
     & (h9b .lt. h6b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,4,1,7,5,3,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h5b .le. h9b) .and.
     & (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,4,1,8,5,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h9b .lt. h5b) .and.
     & (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,4,1,7,6,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h9b .lt. h5b) .and.
     & (h5b .le. h10b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,4,1,8,6,3,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p4b .lt. p2b) .and. (h10b .lt. h5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p2b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,4,1,8,7,3,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,3,1,6,5,4,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h5b .le. h9b) .and. (h9b .lt. h6b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,3,1,7,5,4,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h5b .le. h9b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,3,1,8,5,4,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h9b .lt. h5b) .and. (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,3,1,7,6,4,2,-1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h9b .lt. h5b) .and. (h5b .le. h10b) .and. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,3,1,8,6,4,2,1.0d0)
      END IF
      IF ((p1b .le. p3b) .and. (p3b .lt. p2b) .and. (p2b .le. p4b) .and.
     & (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p2b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,3,1,8,7,4,2,-1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),8,7,2,1,6,5,4,3,1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h5b .le. h9b) .and. (h9b .lt. h6b) .and.
     & (h6b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,6,2,1,7,5,4,3,-1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h5b .le. h9b) .and. (h10b .lt. h6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h5b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,6,2,1,8,5,4,3,1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h9b .lt. h5b) .and. (h6b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),8,5,2,1,7,6,4,3,1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h9b .lt. h5b) .and. (h5b .le. h10b) .and
     &. (h10b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h5b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h5b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),7,5,2,1,8,6,4,3,-1.0d0)
      END IF
      IF ((p2b .le. p3b) .and. (h10b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2
     &b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h6b-1),6,5,2,1,8,7,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_11',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_11',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_11',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - 1 + (noab+nvab) * (p3b_2 - 1 + (noab+nvab) * (h6b_2 - 1 + (noab
     &+nvab) * (h5b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_11',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p3b .eq. p4b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h5b .eq. h6b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_11',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_11',8,MA_E
     &RR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_11',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_11',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_11',11,MA_
     &ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE mbpt3_t2_12(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: mbpt3_t2.F,v 1.3 2005-12-16 22:04:52 kowalski Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p1 p2 h9 h10 )_t1e2 + = -1 * e2 ( )_e2 * t1 ( p1 p2 h9 h10 )_t1
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER p2b
      INTEGER h9b
      INTEGER h10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. ieor(irrep_t1,irrep_e2))
     & THEN
      dimc = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mbpt3_t2_12',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (0 .eq. irrep_e2) THEN
      CALL TCE_RESTRICTED_4(p1b,p2b,h9b,h10b,p1b_2,p2b_2,h9b_2,h10b_2)
      dim_common = 1
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mbpt3_t2_12',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mbpt3_t2_12',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),0)
      CALL TCE_SORT_0(dbl_mb(k_a),dbl_mb(k_a_sort),1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mbpt3_t2_12',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mbpt3_t2_12',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mbpt3_t2_12',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + noab * (h9b_2 - 1 + noab * (p2b_2 - noab - 1 + nvab * (p1b
     &_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mbpt3_t2_12',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mbpt3_t2_12',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mbpt3_t2_12',8,MA_E
     &RR)
      END IF
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mbpt3_t2_12',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p2b-1),int_mb(k_range+p1b-1
     &),4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h9b - 1 + noab * (p2b - noab - 1 + nvab * (p1b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mbpt3_t2_12',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mbpt3_t2_12',11,MA_
     &ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
