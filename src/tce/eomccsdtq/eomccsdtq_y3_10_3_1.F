      SUBROUTINE eomccsdtq_y3_10_3_1(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: eomccsdtq_y3_10_3_1.F,v 1.1 2003-10-19 00:59:58 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( p15 p11 )_f + = 1 * f ( p15 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p15b
      INTEGER p11b
      INTEGER p15b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p15
      INTEGER p11
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p15b = noab+1,noab+nvab
      DO p11b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p15b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+p15b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p15b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      IF ((restricted).and.(int_mb(k_spin+p15b-1)+int_mb(k_spin+p11b-1).
     &eq.4)) THEN
      p15b_1 = int_mb(k_alpha+p15b-1)
      p11b_1 = int_mb(k_alpha+p11b-1)
      ELSE
      p15b_1 = p15b
      p11b_1 = p11b
      END IF
      dim_common = 1
      dima_sort = int_mb(k_range+p15b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y3_10_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y3_10_3_1',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p11b_1 - 1
     & + (noab+nvab) * (p15b_1 - 1)))
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      idima = p11 + int_mb(k_range+p11b-1) * ((p15 - 1))
      idima_sort = p15 + int_mb(k_range+p15b-1) * ((p11 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y3_10_3_1',2,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort,'noname',l_c,k_c)) CALL ERRQ
     &UIT('eomccsdtq_y3_10_3_1',3,MA_ERR)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      idima_sort = p15 + int_mb(k_range+p15b-1) * ((p11 - 1))
      idimc = p11 + int_mb(k_range+p11b-1) * ((p15 - 1))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_a_sort + idima_sort - 1)
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort,int_mb(k_c_offset + p11b 
     &- noab - 1 + nvab * (p15b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y3_10_3_1',4,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y3_10_3_1
     &',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
