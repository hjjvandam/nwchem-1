      SUBROUTINE eomccsdtq_y3_11(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_o
     &ffset)
C     $Id: eomccsdtq_y3_11.F,v 1.1 2003-10-19 00:59:59 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h4 h5 h6 p1 p2 p3 )_yv + = 1/2 * P( 3 ) * Sum ( h13 h16 p15 ) * y ( h4 h5 h13 h16 p1 p2 p3 p15 )_y * i1 ( h6 p15 h13 h16 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h4b
      INTEGER h5b
      INTEGER h6b
      INTEGER p1b
      INTEGER p2b
      INTEGER p3b
      INTEGER h13b
      INTEGER h16b
      INTEGER p15b
      INTEGER h4b_1
      INTEGER h5b_1
      INTEGER h13b_1
      INTEGER h16b_1
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p3b_1
      INTEGER p15b_1
      INTEGER h6b_2
      INTEGER p15b_2
      INTEGER h13b_2
      INTEGER h16b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER h13
      INTEGER h16
      INTEGER h4
      INTEGER h5
      INTEGER p15
      INTEGER p1
      INTEGER p2
      INTEGER p3
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h6
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsuperh(2)
      INTEGER isuperh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h4b = 1,noab
      DO h5b = h4b,noab
      DO h6b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO p3b = p2b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1
     &)+int_mb(k_spin+h6b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+i
     &nt_mb(k_spin+p3b-1).ne.12)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)
     & .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+h6b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),int
     &_mb(k_sym+p3b-1)))))) .eq. ieor(irrep_y,irrep_v)) THEN
      DO h13b = 1,noab
      DO h16b = h13b,noab
      DO p15b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h13b-1
     &)+int_mb(k_spin+h16b-1) .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+p2
     &b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h16b-1),ieor(int_mb(k_sym+p1b-1),i
     &eor(int_mb(k_sym+p2b-1),ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p15b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((restricted).and.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+in
     &t_mb(k_spin+h13b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+p1b-1)+int
     &_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p15b-1).eq.16
     &)) THEN
      h4b_1 = int_mb(k_alpha+h4b-1)
      h5b_1 = int_mb(k_alpha+h5b-1)
      h13b_1 = int_mb(k_alpha+h13b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      p1b_1 = int_mb(k_alpha+p1b-1)
      p2b_1 = int_mb(k_alpha+p2b-1)
      p3b_1 = int_mb(k_alpha+p3b-1)
      p15b_1 = int_mb(k_alpha+p15b-1)
      ELSE
      h4b_1 = h4b
      h5b_1 = h5b
      h13b_1 = h13b
      h16b_1 = h16b
      p1b_1 = p1b
      p2b_1 = p2b
      p3b_1 = p3b
      p15b_1 = p15b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h6b-1)+int_mb(k_spin+p15b-1)+i
     &nt_mb(k_spin+h13b-1)+int_mb(k_spin+h16b-1).eq.8)) THEN
      h6b_2 = int_mb(k_alpha+h6b-1)
      p15b_2 = int_mb(k_alpha+p15b-1)
      h13b_2 = int_mb(k_alpha+h13b-1)
      h16b_2 = int_mb(k_alpha+h16b-1)
      ELSE
      h6b_2 = h6b
      p15b_2 = p15b
      h13b_2 = h13b
      h16b_2 = h16b
      END IF
      dim_common = int_mb(k_range+h13b-1) * int_mb(k_range+h16b-1) * int
     &_mb(k_range+p15b-1)
      dima_sort = int_mb(k_range+h4b-1) * int_mb(k_range+h5b-1) * int_mb
     &(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y3_11',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y3_11',1,MA_ERR)
      IF ((h16b .lt. h4b) .and. (p15b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h4b_1 - 1 + n
     &oab * (h16b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 - 1) + int
     &_mb(k_range+h4b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h4b) .and. (p1b .le. p15b) .and. (p15b .lt. p2b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h4b_1 - 1 + n
     &oab * (h16b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 - 1) + int
     &_mb(k_range+h4b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h4b) .and. (p2b .le. p15b) .and. (p15b .lt. p3b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h4b_1 - 1 + n
     &oab * (h16b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 - 1) + int
     &_mb(k_range+h4b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h16b .lt. h4b) .and. (p3b .le. p15b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h4b_1 - 1 + n
     &oab * (h16b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 - 1) + int
     &_mb(k_range+h4b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h4b .le. h16b) .and. (h16b .lt. h5b) .a
     &nd. (p15b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h4b .le. h16b) .and. (h16b .lt. h5b) .a
     &nd. (p1b .le. p15b) .and. (p15b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h4b .le. h16b) .and. (h16b .lt. h5b) .a
     &nd. (p2b .le. p15b) .and. (p15b .lt. p3b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h4b .le. h16b) .and. (h16b .lt. h5b) .a
     &nd. (p3b .le. p15b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h5b .le. h16b) .and. (p15b .lt. p1b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h5b .le. h16b) .and. (p1b .le. p15b) .a
     &nd. (p15b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h5b .le. h16b) .and. (p2b .le. p15b) .a
     &nd. (p15b .lt. p3b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h4b) .and. (h5b .le. h16b) .and. (p3b .le. p15b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h4b_1 - 1 + noab * (h13b_1 - 1)))))))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h13 -
     & 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h16b .lt. h5b) .and. (p15b .lt. p1b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h16b .lt. h5b) .and. (p1b .le. p15b) .a
     &nd. (p15b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h16b .lt. h5b) .and. (p2b .le. p15b) .a
     &nd. (p15b .lt. p3b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h16b .lt. h5b) .and. (p3b .le. p15b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h5b_1 - 1 + noab * (h16b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h16 - 1) + in
     &t_mb(k_range+h16b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h13b .lt. h5b) .and. (h5b .le. h16b) .a
     &nd. (p15b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h13b .lt. h5b) .and. (h5b .le. h16b) .a
     &nd. (p1b .le. p15b) .and. (p15b .lt. p2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h13b .lt. h5b) .and. (h5b .le. h16b) .a
     &nd. (p2b .le. p15b) .and. (p15b .lt. p3b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h4b .le. h13b) .and. (h13b .lt. h5b) .and. (h5b .le. h16b) .a
     &nd. (p3b .le. p15b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h5b_1 - 1 + 
     &noab * (h13b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h5 - 1) + i
     &nt_mb(k_range+h5b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h5b .le. h13b) .and. (p15b .lt. p1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nva
     &b * (p15b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h13b_1 - 1 +
     & noab * (h5b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p15 - 1) + int_mb(k_r
     &ange+p15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 - 1) + 
     &int_mb(k_range+h13b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h5b .le. h13b) .and. (p1b .le. p15b) .and. (p15b .lt. p2b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h13b_1 - 1 +
     & noab * (h5b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 - 1) + 
     &int_mb(k_range+h13b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h5b .le. h13b) .and. (p2b .le. p15b) .and. (p15b .lt. p3b)) T
     &HEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p3b_1 - no
     &ab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h13b_1 - 1 +
     & noab * (h5b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idima = p3 + int_mb(k_range+p3b-1) * ((p15 - 1) + int_mb(k_range+p
     &15b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 - 1) + 
     &int_mb(k_range+h13b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h5b .le. h13b) .and. (p3b .le. p15b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p15b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nv
     &ab * (p1b_1 - noab - 1 + nvab * (h16b_1 - 1 + noab * (h13b_1 - 1 +
     & noab * (h5b_1 - 1 + noab * (h4b_1 - 1)))))))))
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      idima = p15 + int_mb(k_range+p15b-1) * ((p3 - 1) + int_mb(k_range+
     &p3b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * ((p1 - 1) + int_mb(k_
     &range+p1b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h13 - 1) + 
     &int_mb(k_range+h13b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 
     &- 1))))))))
      idima_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h4 - 1) + 
     &int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((p1 -
     & 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb(k_range+p2b-1) * 
     &((p3 - 1))))))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y3_11',2,MA_ER
     &R)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y3_11',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y3_11',4,MA_ERR)
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + h16b_2 - 1
     & + noab * (h13b_2 - 1 + noab * (p15b_2 - noab - 1 + nvab * (h6b_2 
     &- 1)))))
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      idimb = h16 + int_mb(k_range+h16b-1) * ((h13 - 1) + int_mb(k_range
     &+h13b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h6 - 1))))
      idimb_sort = h13 + int_mb(k_range+h13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y3_11',5,MA_ER
     &R)
      nsuperh(1) = 1
      nsuperh(2) = 1
      isuperh = 1
      IF (h13b .eq. h16b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y3_11',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperh(1))/FACTORIAL(nsuperh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y3_11',7,MA_ERR)
      IF ((h5b .le. h6b)) THEN
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idimc_sort = h4 + int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_ran
     &ge+h5b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb
     &(k_range+p2b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((h6 - 1))))
     &))
      idimc = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((h6 - 1) + int_mb(k_ra
     &nge+h6b-1) * ((h5 - 1) + int_mb(k_range+h5b-1) * ((h4 - 1))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p3b - noab - 1 + nvab * (p2b - noab - 1 + nvab * (p1b - noab 
     &- 1 + nvab * (h6b - 1 + noab * (h5b - 1 + noab * (h4b - 1)))))))
      END IF
      IF ((h6b .le. h4b)) THEN
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idimc_sort = h4 + int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_ran
     &ge+h5b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb
     &(k_range+p2b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((h6 - 1))))
     &))
      idimc = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((h5 - 1) + int_mb(k_ra
     &nge+h5b-1) * ((h4 - 1) + int_mb(k_range+h4b-1) * ((h6 - 1))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p3b - noab - 1 + nvab * (p2b - noab - 1 + nvab * (p1b - noab 
     &- 1 + nvab * (h5b - 1 + noab * (h4b - 1 + noab * (h6b - 1)))))))
      END IF
      IF ((h4b .le. h6b) .and. (h6b .le. h5b)) THEN
      DO h4 = 1,int_mb(k_range+h4b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h5 = 1,int_mb(k_range+h5b-1)
      DO p1 = 1,int_mb(k_range+p1b-1)
      DO p2 = 1,int_mb(k_range+p2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      idimc_sort = h4 + int_mb(k_range+h4b-1) * ((h5 - 1) + int_mb(k_ran
     &ge+h5b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((p2 - 1) + int_mb
     &(k_range+p2b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((h6 - 1))))
     &))
      idimc = p3 + int_mb(k_range+p3b-1) * ((p2 - 1) + int_mb(k_range+p2
     &b-1) * ((p1 - 1) + int_mb(k_range+p1b-1) * ((h5 - 1) + int_mb(k_ra
     &nge+h5b-1) * ((h6 - 1) + int_mb(k_range+h6b-1) * ((h4 - 1))))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p3b - noab - 1 + nvab * (p2b - noab - 1 + nvab * (p1b - noab 
     &- 1 + nvab * (h5b - 1 + noab * (h6b - 1 + noab * (h4b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y3_11',8,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y3_11',9,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y3_11',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y3_11',11
     &,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
