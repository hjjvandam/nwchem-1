      SUBROUTINE eomccsdtq_y2_22_8(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     $Id: eomccsdtq_y2_22_8.F,v 1.1 2003-10-19 00:59:45 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h3 p13 p18 h15 h16 h17 )_vttt + = -2 * Sum ( p10 ) * t ( p10 p13 h16 h17 )_t * i2 ( h3 p18 h15 p10 )_vtt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER p13b
      INTEGER p18b
      INTEGER h16b
      INTEGER h17b
      INTEGER h15b
      INTEGER p10b
      INTEGER p13b_1
      INTEGER p10b_1
      INTEGER h16b_1
      INTEGER h17b_1
      INTEGER h3b_2
      INTEGER p18b_2
      INTEGER h15b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p10
      INTEGER p13
      INTEGER h16
      INTEGER h17
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h3
      INTEGER p18
      INTEGER h15
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p18b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO h17b = h16b,noab
      DO h15b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+p18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+h17b-1).ne.12)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p18b-
     &1) .eq. int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+
     &h17b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+p18b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h16b-1)
     &,int_mb(k_sym+h17b-1)))))) .eq. ieor(irrep_v,ieor(irrep_t,ieor(irr
     &ep_t,irrep_t)))) THEN
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin
     &+h16b-1)+int_mb(k_spin+h17b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_m
     &b(k_sym+h16b-1),int_mb(k_sym+h17b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p13b-1)+int_mb(k_spin+p10b-1)+
     &int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1).eq.8)) THEN
      p13b_1 = int_mb(k_alpha+p13b-1)
      p10b_1 = int_mb(k_alpha+p10b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      h17b_1 = int_mb(k_alpha+h17b-1)
      ELSE
      p13b_1 = p13b
      p10b_1 = p10b
      h16b_1 = h16b
      h17b_1 = h17b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p18b-1)+i
     &nt_mb(k_spin+h15b-1)+int_mb(k_spin+p10b-1).eq.8)) THEN
      h3b_2 = int_mb(k_alpha+h3b-1)
      p18b_2 = int_mb(k_alpha+p18b-1)
      h15b_2 = int_mb(k_alpha+h15b-1)
      p10b_2 = int_mb(k_alpha+p10b-1)
      ELSE
      h3b_2 = h3b
      p18b_2 = p18b
      h15b_2 = h15b
      p10b_2 = p10b
      END IF
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+p13b-1) * int_mb(k_range+h16b-1) * int_
     &mb(k_range+h17b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+p18b-1) * int_m
     &b(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y2_22_8',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y2_22_8',1,MA_ERR)
      IF ((p10b .le. p13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h17b_1 - 1
     & + noab * (h16b_1 - 1 + noab * (p13b_1 - noab - 1 + nvab * (p10b_1
     & - noab - 1)))))
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idima = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((p10 - 1))))
      idima_sort = p10 + int_mb(k_range+p10b-1) * ((p13 - 1) + int_mb(k_
     &range+p13b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h17 - 1)))
     &)
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p13b .lt. p10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h17b_1 - 1
     & + noab * (h16b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p13b_1
     & - noab - 1)))))
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idima = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((p10 - 1) + int_mb(k_range+p10b-1) * ((p13 - 1))))
      idima_sort = p10 + int_mb(k_range+p10b-1) * ((p13 - 1) + int_mb(k_
     &range+p13b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((h17 - 1)))
     &)
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y2_22_8',2,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y2_22_8',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y2_22_8',4,MA_ERR)
      IF ((h15b .le. p10b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p10b_2 - n
     &oab - 1 + nvab * (h15b_2 - 1 + noab * (p18b_2 - noab - 1 + nvab * 
     &(h3b_2 - 1)))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      idimb = p10 + int_mb(k_range+p10b-1) * ((h15 - 1) + int_mb(k_range
     &+h15b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h3 - 1))))
      idimb_sort = p10 + int_mb(k_range+p10b-1) * ((h3 - 1) + int_mb(k_r
     &ange+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h15 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y2_22_8',5,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y2_22_8',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y2_22_8',7,MA_ERR)
      IF ((p13b .le. p18b) .and. (h15b .le. h16b)) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * ((p18 - 1) + int_
     &mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h17b - 1 + noab * (h16b - 1 + noab * (h15b - 1 + noab * (p18b
     & - noab - 1 + nvab * (p13b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF ((p13b .le. p18b) .and. (h16b .le. h15b) .and. (h15b .le. h17b)
     &) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h17 + int_mb(k_range+h17b-1) * ((h15 - 1) + int_mb(k_range
     &+h15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p18 - 1) + int_
     &mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h17b - 1 + noab * (h15b - 1 + noab * (h16b - 1 + noab * (p18b
     & - noab - 1 + nvab * (p13b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF ((p13b .le. p18b) .and. (h17b .le. h15b)) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h15 + int_mb(k_range+h15b-1) * ((h17 - 1) + int_mb(k_range
     &+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p18 - 1) + int_
     &mb(k_range+p18b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h15b - 1 + noab * (h17b - 1 + noab * (h16b - 1 + noab * (p18b
     & - noab - 1 + nvab * (p13b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF ((p18b .le. p13b) .and. (h15b .le. h16b)) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h17 + int_mb(k_range+h17b-1) * ((h16 - 1) + int_mb(k_range
     &+h16b-1) * ((h15 - 1) + int_mb(k_range+h15b-1) * ((p13 - 1) + int_
     &mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h17b - 1 + noab * (h16b - 1 + noab * (h15b - 1 + noab * (p13b
     & - noab - 1 + nvab * (p18b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF ((p18b .le. p13b) .and. (h16b .le. h15b) .and. (h15b .le. h17b)
     &) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h17 + int_mb(k_range+h17b-1) * ((h15 - 1) + int_mb(k_range
     &+h15b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p13 - 1) + int_
     &mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h17b - 1 + noab * (h15b - 1 + noab * (h16b - 1 + noab * (p13b
     & - noab - 1 + nvab * (p18b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF ((p18b .le. p13b) .and. (h17b .le. h15b)) THEN
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p18 = 1,int_mb(k_range+p18b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO h17 = 1,int_mb(k_range+h17b-1)
      DO h15 = 1,int_mb(k_range+h15b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h16 - 1) + int_mb(k_
     &range+h16b-1) * ((h17 - 1) + int_mb(k_range+h17b-1) * ((h3 - 1) + 
     &int_mb(k_range+h3b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h1
     &5 - 1))))))
      idimc = h15 + int_mb(k_range+h15b-1) * ((h17 - 1) + int_mb(k_range
     &+h17b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p13 - 1) + int_
     &mb(k_range+p13b-1) * ((p18 - 1) + int_mb(k_range+p18b-1) * ((h3 - 
     &1))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/3.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h15b - 1 + noab * (h17b - 1 + noab * (h16b - 1 + noab * (p13b
     & - noab - 1 + nvab * (p18b - noab - 1 + nvab * (h3b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y2_22_8',8,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y2_22_8',
     &9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y2_22_8',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y2_22_8',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
