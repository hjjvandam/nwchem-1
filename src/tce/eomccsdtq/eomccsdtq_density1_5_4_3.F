      SUBROUTINE eomccsdtq_density1_5_4_3(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: eomccsdtq_density1_5_4_3.F,v 1.1 2003-10-19 00:58:35 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 h11 )_yx + = 1/12 * Sum ( h8 h7 p6 p5 p4 ) * x ( p4 p5 p6 h7 h8 h11 )_x * y ( h2 h7 h8 p4 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h11b
      INTEGER p4b
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h11b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h2b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p4
      INTEGER p5
      INTEGER p6
      INTEGER h7
      INTEGER h8
      INTEGER h11
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h2
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h11b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h11b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h2b-1) .eq. int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),int_mb(k_sym+h11b-1)) .eq. ieor(irrep
     &_y,irrep_x)) THEN
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h11b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h7b-1),in
     &t_mb(k_sym+h8b-1)))))) .eq. irrep_x) THEN
      IF ((restricted).and.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+in
     &t_mb(k_spin+p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h7b-1)+int_
     &mb(k_spin+h8b-1).eq.12)) THEN
      p4b_1 = int_mb(k_alpha+p4b-1)
      p5b_1 = int_mb(k_alpha+p5b-1)
      p6b_1 = int_mb(k_alpha+p6b-1)
      h11b_1 = int_mb(k_alpha+h11b-1)
      h7b_1 = int_mb(k_alpha+h7b-1)
      h8b_1 = int_mb(k_alpha+h8b-1)
      ELSE
      p4b_1 = p4b
      p5b_1 = p5b
      p6b_1 = p6b
      h11b_1 = h11b
      h7b_1 = h7b
      h8b_1 = h8b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h7b-1)+in
     &t_mb(k_spin+h8b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_m
     &b(k_spin+p6b-1).eq.12)) THEN
      h2b_2 = int_mb(k_alpha+h2b-1)
      h7b_2 = int_mb(k_alpha+h7b-1)
      h8b_2 = int_mb(k_alpha+h8b-1)
      p4b_2 = int_mb(k_alpha+p4b-1)
      p5b_2 = int_mb(k_alpha+p5b-1)
      p6b_2 = int_mb(k_alpha+p6b-1)
      ELSE
      h2b_2 = h2b
      h7b_2 = h7b
      h8b_2 = h8b
      p4b_2 = p4b
      p5b_2 = p5b
      p6b_2 = p6b
      END IF
      dim_common = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1) * int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h11b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_density1_5_4_3',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_density1_5_4_3',1,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h11b_1 - 1
     & + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idima = h11 + int_mb(k_range+h11b-1) * ((h8 - 1) + int_mb(k_range+
     &h8b-1) * ((h7 - 1) + int_mb(k_range+h7b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p4 - 1))))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h11 - 1)))
     &)))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h8b_1 - 1 
     &+ noab * (h11b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      idima = h8 + int_mb(k_range+h8b-1) * ((h11 - 1) + int_mb(k_range+h
     &11b-1) * ((h7 - 1) + int_mb(k_range+h7b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p4 - 1))))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h11 - 1)))
     &)))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h11b .lt. h7b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h8b_1 - 1 
     &+ noab * (h7b_1 - 1 + noab * (h11b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      idima = h8 + int_mb(k_range+h8b-1) * ((h7 - 1) + int_mb(k_range+h7
     &b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p4 - 1))))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h11 - 1)))
     &)))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_density1_5_4_3
     &',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_density1_5_4_3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_density1_5_4_3',4,MA_ERR)
      IF ((h8b .lt. h2b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p4b_2 - noab - 1 + nva
     &b * (h2b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((h2 - 1) + int_mb(k_ra
     &nge+h2b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h7 - 1))))))
      idimb_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h2 - 1))))
     &))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p4b_2 - noab - 1 + nva
     &b * (h8b_2 - 1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((h8 - 1) + int_mb(k_ra
     &nge+h8b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h7 - 1))))))
      idimb_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h2 - 1))))
     &))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h2b .le. h7b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p4b_2 - noab - 1 + nva
     &b * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h7 = 1,int_mb(k_range+h7b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((h8 - 1) + int_mb(k_ra
     &nge+h8b-1) * ((h7 - 1) + int_mb(k_range+h7b-1) * ((h2 - 1))))))
      idimb_sort = p4 + int_mb(k_range+p4b-1) * ((p5 - 1) + int_mb(k_ran
     &ge+p5b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((h7 - 1) + int_mb
     &(k_range+h7b-1) * ((h8 - 1) + int_mb(k_range+h8b-1) * ((h2 - 1))))
     &))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_density1_5_4_3
     &',5,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p4b .eq. p5b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_density1_5_4_3',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_density1_5_4_3',7,MA_ERR)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      idimc_sort = h11 + int_mb(k_range+h11b-1) * ((h2 - 1))
      idimc = h11 + int_mb(k_range+h11b-1) * ((h2 - 1))
      dbl_mb(k_c + idimc - 1) = 1.0d0/12.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h11b - 1 + noab * (h2b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_density1_5_4_3
     &',8,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_density1_
     &5_4_3',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_density1_
     &5_4_3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_density1_
     &5_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
