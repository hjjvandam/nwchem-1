      SUBROUTINE eomccsdtq_y1_5_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     $Id: eomccsdtq_y1_5_5.F,v 1.1 2003-10-19 00:59:28 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 p11 h9 h12 )_vt + = -2 * Sum ( h6 p4 ) * t ( p4 p11 h6 h12 )_t * i2 ( h2 h6 h9 p4 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p11b
      INTEGER h12b
      INTEGER h9b
      INTEGER p4b
      INTEGER h6b
      INTEGER p11b_1
      INTEGER p4b_1
      INTEGER h12b_1
      INTEGER h6b_1
      INTEGER h2b_2
      INTEGER h6b_2
      INTEGER h9b_2
      INTEGER p4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p4
      INTEGER p11
      INTEGER h6
      INTEGER h12
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h2
      INTEGER h9
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO p11b = noab+1,noab+nvab
      DO h12b = 1,noab
      DO h9b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p11b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h12b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+
     &h9b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_mb
     &(k_sym+h9b-1),int_mb(k_sym+h12b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      DO p4b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h12b-1)+int_mb(k_spin+h6b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h12b-1),int_mb(k_sym+h6b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p11b-1)+int_mb(k_spin+p4b-1)+i
     &nt_mb(k_spin+h12b-1)+int_mb(k_spin+h6b-1).eq.8)) THEN
      p11b_1 = int_mb(k_alpha+p11b-1)
      p4b_1 = int_mb(k_alpha+p4b-1)
      h12b_1 = int_mb(k_alpha+h12b-1)
      h6b_1 = int_mb(k_alpha+h6b-1)
      ELSE
      p11b_1 = p11b
      p4b_1 = p4b
      h12b_1 = h12b
      h6b_1 = h6b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h6b-1)+in
     &t_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1).eq.8)) THEN
      h2b_2 = int_mb(k_alpha+h2b-1)
      h6b_2 = int_mb(k_alpha+h6b-1)
      h9b_2 = int_mb(k_alpha+h9b-1)
      p4b_2 = int_mb(k_alpha+p4b-1)
      ELSE
      h2b_2 = h2b
      h6b_2 = h6b
      h9b_2 = h9b
      p4b_2 = p4b
      END IF
      dim_common = int_mb(k_range+p4b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p11b-1) * int_mb(k_range+h12b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_5_5',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_5_5',1,MA_ERR)
      IF ((p4b .le. p11b) .and. (h6b .le. h12b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h12b_1 - 1
     & + noab * (h6b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p4b_1 -
     & noab - 1)))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idima = h12 + int_mb(k_range+h12b-1) * ((h6 - 1) + int_mb(k_range+
     &h6b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((p4 - 1))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((h6 - 1) + int_mb(k_ran
     &ge+h6b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h12 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p4b .le. p11b) .and. (h12b .lt. h6b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h6b_1 - 1 
     &+ noab * (h12b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p4b_1 -
     & noab - 1)))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      idima = h6 + int_mb(k_range+h6b-1) * ((h12 - 1) + int_mb(k_range+h
     &12b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((p4 - 1))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((h6 - 1) + int_mb(k_ran
     &ge+h6b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h12 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p11b .lt. p4b) .and. (h6b .le. h12b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h12b_1 - 1
     & + noab * (h6b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p11b_1 -
     & noab - 1)))))
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idima = h12 + int_mb(k_range+h12b-1) * ((h6 - 1) + int_mb(k_range+
     &h6b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((p11 - 1))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((h6 - 1) + int_mb(k_ran
     &ge+h6b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h12 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p11b .lt. p4b) .and. (h12b .lt. h6b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h6b_1 - 1 
     &+ noab * (h12b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p11b_1 -
     & noab - 1)))))
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      idima = h6 + int_mb(k_range+h6b-1) * ((h12 - 1) + int_mb(k_range+h
     &12b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((p11 - 1))))
      idima_sort = p4 + int_mb(k_range+p4b-1) * ((h6 - 1) + int_mb(k_ran
     &ge+h6b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h12 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_5_5',2,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_5_5',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_5_5',4,MA_ERR)
      IF ((h9b .le. p4b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p4b_2 - no
     &ab - 1 + nvab * (h9b_2 - 1 + noab * (h6b_2 - 1 + noab * (h2b_2 - 1
     &)))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      idimb = p4 + int_mb(k_range+p4b-1) * ((h9 - 1) + int_mb(k_range+h9
     &b-1) * ((h6 - 1) + int_mb(k_range+h6b-1) * ((h2 - 1))))
      idimb_sort = p4 + int_mb(k_range+p4b-1) * ((h6 - 1) + int_mb(k_ran
     &ge+h6b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h9 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_5_5',5,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y1_5_5',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y1_5_5',7,MA_ERR)
      IF ((h9b .le. h12b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idimc_sort = p11 + int_mb(k_range+p11b-1) * ((h12 - 1) + int_mb(k_
     &range+h12b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h9 - 1))))
      idimc = h12 + int_mb(k_range+h12b-1) * ((h9 - 1) + int_mb(k_range+
     &h9b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h2 - 1))))
      dbl_mb(k_c + idimc - 1) = - dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h12b - 1 + noab * (h9b - 1 + noab * (p11b - noab - 1 + nvab *
     & (h2b - 1)))))
      END IF
      IF ((h12b .le. h9b)) THEN
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      idimc_sort = p11 + int_mb(k_range+p11b-1) * ((h12 - 1) + int_mb(k_
     &range+h12b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h9 - 1))))
      idimc = h9 + int_mb(k_range+h9b-1) * ((h12 - 1) + int_mb(k_range+h
     &12b-1) * ((p11 - 1) + int_mb(k_range+p11b-1) * ((h2 - 1))))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h9b - 1 + noab * (h12b - 1 + noab * (p11b - noab - 1 + nvab *
     & (h2b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_5_5',8,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_5_5',9
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_5_5',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_5_5',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
