      SUBROUTINE OFFSET_eomccsdtq_y1_20_5_1(d_a,l_a_offset,k_a_offset,si
     &ze)
C     $Id: OFFSET_eomccsdtq_y1_20_5_1.F,v 1.1 2003-10-19 00:58:17 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 h12 p15 p18 h13 h14 h16 h17 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h2b
      INTEGER h12b
      INTEGER p15b
      INTEGER p18b
      INTEGER h13b
      INTEGER h14b
      INTEGER h16b
      INTEGER h17b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*nvab*nvab*noab*noab*noab*noa
     &b,'noname',l_a_offset,k_a_offset)) CALL ERRQUIT('eomccsdtq_y1_20_5
     &_1',0,MA_ERR)
      size = 0
      DO h2b = 1,noab
      DO h12b = 1,noab
      DO p15b = noab+1,noab+nvab
      DO p18b = p15b,noab+nvab
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h16b = h14b,noab
      DO h17b = h16b,noab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+p15b-
     &1)+int_mb(k_spin+p18b-1) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+
     &h14b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+p15b-1),ieor(int_mb(k_sym+p18b-1),ieor(int_mb(k_sym+h13b-1)
     &,ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h16b-1),int_mb(k_sym+
     &h17b-1)))))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p18b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-
     &1).ne.16)) THEN
      int_mb(k_a_offset + h17b - 1 + noab * (h16b - 1 + noab * (h14b - 1
     & + noab * (h13b - 1 + noab * (p18b - noab - 1 + nvab * (p15b - noa
     &b - 1 + nvab * (h12b - 1 + noab * (h2b - 1)))))))) = size
      size = size + int_mb(k_range+h2b-1) * int_mb(k_range+h12b-1) * int
     &_mb(k_range+p15b-1) * int_mb(k_range+p18b-1) * int_mb(k_range+h13b
     &-1) * int_mb(k_range+h14b-1) * int_mb(k_range+h16b-1) * int_mb(k_r
     &ange+h17b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
