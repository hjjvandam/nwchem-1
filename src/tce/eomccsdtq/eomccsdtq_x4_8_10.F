      SUBROUTINE eomccsdtq_x4_8_10(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     $Id: eomccsdtq_x4_8_10.F,v 1.1 2003-10-19 00:59:04 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p5 p6 p7 h1 h2 h3 h4 )_vtx + = 1/2 * P( 3 ) * Sum ( h12 ) * x ( p5 h12 )_x * i2 ( h12 h13 p6 p7 h1 h2 h3 h4 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER h4b
      INTEGER h12b
      INTEGER p5b_1
      INTEGER h12b_1
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER h13b_2
      INTEGER h12b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p5
      INTEGER h12
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER p6
      INTEGER p7
      INTEGER h13
      INTEGER h1
      INTEGER h2
      INTEGER h3
      INTEGER h4
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p5b = noab+1,noab+nvab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      DO h4b = h3b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1).ne.
     &16)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h4b-1
     &)))))))) .eq. ieor(irrep_v,ieor(irrep_t,irrep_x))) THEN
      DO h12b = 1,noab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h12b-1)) .eq. irrep_x) T
     &HEN
      IF ((restricted).and.(int_mb(k_spin+p5b-1)+int_mb(k_spin+h12b-1).e
     &q.4)) THEN
      p5b_1 = int_mb(k_alpha+p5b-1)
      h12b_1 = int_mb(k_alpha+h12b-1)
      ELSE
      p5b_1 = p5b
      h12b_1 = h12b
      END IF
      IF ((restricted).and.(int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+in
     &t_mb(k_spin+h13b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h1b-1)+int
     &_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1).eq.16)
     &) THEN
      p6b_2 = int_mb(k_alpha+p6b-1)
      p7b_2 = int_mb(k_alpha+p7b-1)
      h13b_2 = int_mb(k_alpha+h13b-1)
      h12b_2 = int_mb(k_alpha+h12b-1)
      h1b_2 = int_mb(k_alpha+h1b-1)
      h2b_2 = int_mb(k_alpha+h2b-1)
      h3b_2 = int_mb(k_alpha+h3b-1)
      h4b_2 = int_mb(k_alpha+h4b-1)
      ELSE
      p6b_2 = p6b
      p7b_2 = p7b
      h13b_2 = h13b
      h12b_2 = h12b
      h1b_2 = h1b
      h2b_2 = h2b
      h3b_2 = h3b
      h4b_2 = h4b
      END IF
      dim_common = int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p5b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_8_10',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_x4_8_10',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h12b_1 - 1
     & + noab * (p5b_1 - noab - 1)))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idima = h12 + int_mb(k_range+h12b-1) * ((p5 - 1))
      idima_sort = h12 + int_mb(k_range+h12b-1) * ((p5 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_x4_8_10',2,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_8_10',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_x4_8_10',4,MA_ERR)
      IF ((h12b .le. h13b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + h4b_2 - 1 
     &+ noab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h12b_2 - 1 + noab * (p7b_2 - noab - 1 + n
     &vab * (p6b_2 - noab - 1)))))))))
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      idimb = h4 + int_mb(k_range+h4b-1) * ((h3 - 1) + int_mb(k_range+h3
     &b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_ra
     &nge+h1b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h12 - 1) + in
     &t_mb(k_range+h12b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p6 - 
     &1))))))))
      idimb_sort = h12 + int_mb(k_range+h12b-1) * ((p6 - 1) + int_mb(k_r
     &ange+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((h13 - 1) + int
     &_mb(k_range+h13b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1
     &) + int_mb(k_range+h2b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((
     &h4 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h12b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + h4b_2 - 1 
     &+ noab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab
     & * (h12b_2 - 1 + noab * (h13b_2 - 1 + noab * (p7b_2 - noab - 1 + n
     &vab * (p6b_2 - noab - 1)))))))))
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      idimb = h4 + int_mb(k_range+h4b-1) * ((h3 - 1) + int_mb(k_range+h3
     &b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_ra
     &nge+h1b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h13 - 1) + in
     &t_mb(k_range+h13b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p6 - 
     &1))))))))
      idimb_sort = h12 + int_mb(k_range+h12b-1) * ((p6 - 1) + int_mb(k_r
     &ange+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((h13 - 1) + int
     &_mb(k_range+h13b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1
     &) + int_mb(k_range+h2b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((
     &h4 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_x4_8_10',5,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_x4_8_10',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_x4_8_10',7,MA_ERR)
      IF ((p5b .le. p6b)) THEN
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      idimc_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((h13 - 1) + int_m
     &b(k_range+h13b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1) 
     &+ int_mb(k_range+h2b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h4
     & - 1))))))))
      idimc = h4 + int_mb(k_range+h4b-1) * ((h3 - 1) + int_mb(k_range+h3
     &b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_ra
     &nge+h1b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p7 - 1) + int
     &_mb(k_range+p7b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1)
     &)))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h4b - 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (h1b - 1
     & + noab * (h13b - 1 + noab * (p7b - noab - 1 + nvab * (p6b - noab 
     &- 1 + nvab * (p5b - noab - 1)))))))))
      END IF
      IF ((p6b .le. p5b) .and. (p5b .le. p7b)) THEN
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      idimc_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((h13 - 1) + int_m
     &b(k_range+h13b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1) 
     &+ int_mb(k_range+h2b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h4
     & - 1))))))))
      idimc = h4 + int_mb(k_range+h4b-1) * ((h3 - 1) + int_mb(k_range+h3
     &b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_ra
     &nge+h1b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p7 - 1) + int
     &_mb(k_range+p7b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1)
     &)))))))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h4b - 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (h1b - 1
     & + noab * (h13b - 1 + noab * (p7b - noab - 1 + nvab * (p5b - noab 
     &- 1 + nvab * (p6b - noab - 1)))))))))
      END IF
      IF ((p7b .le. p5b)) THEN
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h4 = 1,int_mb(k_range+h4b-1)
      idimc_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((h13 - 1) + int_m
     &b(k_range+h13b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1) 
     &+ int_mb(k_range+h2b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h4
     & - 1))))))))
      idimc = h4 + int_mb(k_range+h4b-1) * ((h3 - 1) + int_mb(k_range+h3
     &b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_ra
     &nge+h1b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p5 - 1) + int
     &_mb(k_range+p5b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p6 - 1)
     &)))))))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h4b - 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (h1b - 1
     & + noab * (h13b - 1 + noab * (p5b - noab - 1 + nvab * (p7b - noab 
     &- 1 + nvab * (p6b - noab - 1)))))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_x4_8_10',8,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_x4_8_10',
     &9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_x4_8_10',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_x4_8_10',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
