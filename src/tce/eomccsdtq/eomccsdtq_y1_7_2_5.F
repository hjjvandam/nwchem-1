      SUBROUTINE eomccsdtq_y1_7_2_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     $Id: eomccsdtq_y1_7_2_5.F,v 1.1 2003-10-19 00:59:30 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 p15 h12 h13 )_vtt + = 2 * Sum ( h10 p8 ) * t ( p8 p15 h10 h13 )_t * i3 ( h9 h10 h12 p8 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p15b
      INTEGER h9b
      INTEGER h13b
      INTEGER h12b
      INTEGER p8b
      INTEGER h10b
      INTEGER p15b_1
      INTEGER p8b_1
      INTEGER h13b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h12b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p8
      INTEGER p15
      INTEGER h10
      INTEGER h13
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h9
      INTEGER h12
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p15b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h13b = 1,noab
      DO h12b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p15b-
     &1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p15b-1) .eq. int_mb(k_spin+
     &h12b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_mb
     &(k_sym+h12b-1),int_mb(k_sym+h13b-1)))) .eq. ieor(irrep_v,ieor(irre
     &p_t,irrep_t))) THEN
      DO p8b = noab+1,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p15b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+
     &h13b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p15b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb
     &(k_sym+h13b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p15b-1)+int_mb(k_spin+p8b-1)+i
     &nt_mb(k_spin+h13b-1)+int_mb(k_spin+h10b-1).eq.8)) THEN
      p15b_1 = int_mb(k_alpha+p15b-1)
      p8b_1 = int_mb(k_alpha+p8b-1)
      h13b_1 = int_mb(k_alpha+h13b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      ELSE
      p15b_1 = p15b
      p8b_1 = p8b
      h13b_1 = h13b
      h10b_1 = h10b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+h12b-1)+int_mb(k_spin+p8b-1).eq.8)) THEN
      h9b_2 = int_mb(k_alpha+h9b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      h12b_2 = int_mb(k_alpha+h12b-1)
      p8b_2 = int_mb(k_alpha+p8b-1)
      ELSE
      h9b_2 = h9b
      h10b_2 = h10b
      h12b_2 = h12b
      p8b_2 = p8b
      END IF
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p15b-1) * int_mb(k_range+h13b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_7_2_5',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_7_2_5',1,MA_ERR)
      IF ((p8b .le. p15b) .and. (h10b .le. h13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h13b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p8b_1 
     &- noab - 1)))))
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      idima = h13 + int_mb(k_range+h13b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p8 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h13 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p8b .le. p15b) .and. (h13b .lt. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h13b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p8b_1 
     &- noab - 1)))))
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h13 - 1) + int_mb(k_range
     &+h13b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((p8 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h13 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p15b .lt. p8b) .and. (h10b .le. h13b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h13b_1 - 1
     & + noab * (h10b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p15b_1 
     &- noab - 1)))))
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      idima = h13 + int_mb(k_range+h13b-1) * ((h10 - 1) + int_mb(k_range
     &+h10b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p15 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h13 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p15b .lt. p8b) .and. (h13b .lt. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h13b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p15b_1 
     &- noab - 1)))))
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h13 - 1) + int_mb(k_range
     &+h13b-1) * ((p8 - 1) + int_mb(k_range+p8b-1) * ((p15 - 1))))
      idima_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h13 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_7_2_5',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_7_2_5',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_7_2_5',4,MA_ERR)
      IF ((h10b .lt. h9b) .and. (h12b .le. p8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 - 1 + noab * (h10b_2 -
     & 1)))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((h12 - 1) + int_mb(k_range+h
     &12b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h10 - 1))))
      idimb_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h9b .le. h10b) .and. (h12b .le. p8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (h12b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1)))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((h12 - 1) + int_mb(k_range+h
     &12b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1))))
      idimb_sort = p8 + int_mb(k_range+p8b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_7_2_5',5,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y1_7_2_5',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y1_7_2_5',7,MA_ERR)
      IF ((h12b .le. h13b)) THEN
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      idimc_sort = p15 + int_mb(k_range+p15b-1) * ((h13 - 1) + int_mb(k_
     &range+h13b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h12 - 1))))
      idimc = h13 + int_mb(k_range+h13b-1) * ((h12 - 1) + int_mb(k_range
     &+h12b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h9 - 1))))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h13b - 1 + noab * (h12b - 1 + noab * (p15b - noab - 1 + nvab 
     &* (h9b - 1)))))
      END IF
      IF ((h13b .le. h12b)) THEN
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO p15 = 1,int_mb(k_range+p15b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idimc_sort = p15 + int_mb(k_range+p15b-1) * ((h13 - 1) + int_mb(k_
     &range+h13b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h12 - 1))))
      idimc = h12 + int_mb(k_range+h12b-1) * ((h13 - 1) + int_mb(k_range
     &+h13b-1) * ((p15 - 1) + int_mb(k_range+p15b-1) * ((h9 - 1))))
      dbl_mb(k_c + idimc - 1) = - dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + h12b - 1 + noab * (h13b - 1 + noab * (p15b - noab - 1 + nvab 
     &* (h9b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_7_2_5',8,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_7_2_5'
     &,9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_7_2_5'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_7_2_5'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
