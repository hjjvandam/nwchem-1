      SUBROUTINE eomccsdtq_x4_11_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: eomccsdtq_x4_11_6_1.F,v 1.1 2003-10-19 00:58:57 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 h10 h1 p13 )_vx + = 1 * Sum ( p12 ) * x ( p12 h1 )_x * v ( h9 h10 p12 p13 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h1b
      INTEGER p13b
      INTEGER p12b
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p13b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p12
      INTEGER h1
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h9
      INTEGER h10
      INTEGER p13
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_v,irrep_x)) 
     &THEN
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),int_mb(k_sym+h1b-1)) .eq. irrep_x) T
     &HEN
      IF ((restricted).and.(int_mb(k_spin+p12b-1)+int_mb(k_spin+h1b-1).e
     &q.4)) THEN
      p12b_1 = int_mb(k_alpha+p12b-1)
      h1b_1 = int_mb(k_alpha+h1b-1)
      ELSE
      p12b_1 = p12b
      h1b_1 = h1b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+p13b-1)+int_mb(k_spin+p12b-1).eq.8)) THEN
      h9b_2 = int_mb(k_alpha+h9b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      p13b_2 = int_mb(k_alpha+p13b-1)
      p12b_2 = int_mb(k_alpha+p12b-1)
      ELSE
      h9b_2 = h9b
      h10b_2 = h10b
      p13b_2 = p13b
      p12b_2 = p12b
      END IF
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_11_6_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_x4_11_6_1',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h1b_1 - 1 
     &+ noab * (p12b_1 - noab - 1)))
      DO p12 = 1,int_mb(k_range+p12b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      idima = h1 + int_mb(k_range+h1b-1) * ((p12 - 1))
      idima_sort = p12 + int_mb(k_range+p12b-1) * ((h1 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_x4_11_6_1',2,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_11_6_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_x4_11_6_1',4,MA_ERR)
      IF ((p12b .le. p13b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p13b_2 - 1
     & + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+n
     &vab) * (h9b_2 - 1)))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      idimb = p13 + int_mb(k_range+p13b-1) * ((p12 - 1) + int_mb(k_range
     &+p12b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1))))
      idimb_sort = p12 + int_mb(k_range+p12b-1) * ((h9 - 1) + int_mb(k_r
     &ange+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p13 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p13b .lt. p12b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p12b_2 - 1
     & + (noab+nvab) * (p13b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+n
     &vab) * (h9b_2 - 1)))))
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      idimb = p12 + int_mb(k_range+p12b-1) * ((p13 - 1) + int_mb(k_range
     &+p13b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1))))
      idimb_sort = p12 + int_mb(k_range+p12b-1) * ((h9 - 1) + int_mb(k_r
     &ange+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p13 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_x4_11_6_1',5,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_x4_11_6_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_x4_11_6_1',7,MA_ERR)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      idimc_sort = h1 + int_mb(k_range+h1b-1) * ((h9 - 1) + int_mb(k_ran
     &ge+h9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p13 - 1))))
      idimc = p13 + int_mb(k_range+p13b-1) * ((h1 - 1) + int_mb(k_range+
     &h1b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h9 - 1))))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p13b - noab - 1 + nvab * (h1b - 1 + noab * (h10b - 1 + noab *
     & (h9b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_x4_11_6_1',8,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_x4_11_6_1
     &',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_x4_11_6_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_x4_11_6_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
