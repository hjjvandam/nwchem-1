      SUBROUTINE eomccsdtq_y1_19_15_1_3_2(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: eomccsdtq_y1_19_15_1_3_2.F,v 1.1 2003-10-19 00:59:18 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h6 h12 p4 p11 )_v + = 4/5 * v ( h6 h12 p4 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h12b
      INTEGER p4b
      INTEGER p11b
      INTEGER h6b_1
      INTEGER h12b_1
      INTEGER p4b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER h6
      INTEGER h12
      INTEGER p4
      INTEGER p11
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h12b = h6b,noab
      DO p4b = noab+1,noab+nvab
      DO p11b = p4b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+
     &p4b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+p4b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((restricted).and.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h12b-1)+i
     &nt_mb(k_spin+p4b-1)+int_mb(k_spin+p11b-1).eq.8)) THEN
      h6b_1 = int_mb(k_alpha+h6b-1)
      h12b_1 = int_mb(k_alpha+h12b-1)
      p4b_1 = int_mb(k_alpha+p4b-1)
      p11b_1 = int_mb(k_alpha+p11b-1)
      ELSE
      h6b_1 = h6b
      h12b_1 = h12b
      p4b_1 = p4b
      p11b_1 = p11b
      END IF
      dim_common = 1
      dima_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h12b-1) * int_m
     &b(k_range+p4b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_19_15_1_3_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_19_15_1_3_2',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + p11b_1 - 1
     & + (noab+nvab) * (p4b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (noab+nv
     &ab) * (h6b_1 - 1)))))
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      idima = p11 + int_mb(k_range+p11b-1) * ((p4 - 1) + int_mb(k_range+
     &p4b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h6 - 1))))
      idima_sort = h6 + int_mb(k_range+h6b-1) * ((h12 - 1) + int_mb(k_ra
     &nge+h12b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((p11 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_19_15_1_3_2
     &',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort,'noname',l_c,k_c)) CALL ERRQ
     &UIT('eomccsdtq_y1_19_15_1_3_2',3,MA_ERR)
      DO h6 = 1,int_mb(k_range+h6b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p11 = 1,int_mb(k_range+p11b-1)
      idima_sort = h6 + int_mb(k_range+h6b-1) * ((h12 - 1) + int_mb(k_ra
     &nge+h12b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((p11 - 1))))
      idimc = p11 + int_mb(k_range+p11b-1) * ((p4 - 1) + int_mb(k_range+
     &p4b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h6 - 1))))
      dbl_mb(k_c + idimc - 1) = 4.0d0/5.0d0 * dbl_mb(k_a_sort + idima_so
     &rt - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort,int_mb(k_c_offset + p11b 
     &- noab - 1 + nvab * (p4b - noab - 1 + nvab * (h12b - 1 + noab * (h
     &6b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_19_15_1_3_2
     &',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_19_15_
     &1_3_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
