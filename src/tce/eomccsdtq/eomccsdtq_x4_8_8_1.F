      SUBROUTINE eomccsdtq_x4_8_8_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     $Id: eomccsdtq_x4_8_8_1.F,v 1.1 2003-10-19 00:59:06 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p5 p6 h1 h2 p12 )_vt + = 1 * Sum ( h10 p9 ) * t ( p5 p6 p9 h1 h2 h10 )_t * v ( h10 h13 p9 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER p12b
      INTEGER p9b
      INTEGER h10b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h10b_1
      INTEGER h13b_2
      INTEGER h10b_2
      INTEGER p12b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p9
      INTEGER p5
      INTEGER p6
      INTEGER h10
      INTEGER h1
      INTEGER h2
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h13
      INTEGER p12
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+
     &int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p12
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),in
     &t_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      DO p9b = noab+1,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h10b-1)))))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+in
     &t_mb(k_spin+p9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_m
     &b(k_spin+h10b-1).eq.12)) THEN
      p5b_1 = int_mb(k_alpha+p5b-1)
      p6b_1 = int_mb(k_alpha+p6b-1)
      p9b_1 = int_mb(k_alpha+p9b-1)
      h1b_1 = int_mb(k_alpha+h1b-1)
      h2b_1 = int_mb(k_alpha+h2b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      ELSE
      p5b_1 = p5b
      p6b_1 = p6b
      p9b_1 = p9b
      h1b_1 = h1b
      h2b_1 = h2b
      h10b_1 = h10b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h10b-1)+
     &int_mb(k_spin+p12b-1)+int_mb(k_spin+p9b-1).eq.8)) THEN
      h13b_2 = int_mb(k_alpha+h13b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      p12b_2 = int_mb(k_alpha+p12b-1)
      p9b_2 = int_mb(k_alpha+p9b-1)
      ELSE
      h13b_2 = h13b
      h10b_2 = h10b
      p12b_2 = p12b
      p9b_2 = p9b
      END IF
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_8_8_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_x4_8_8_1',1,MA_ERR)
      IF ((p9b .lt. p5b) .and. (h10b .lt. h1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p9b_1 - noab - 1)))))))
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_range+h1
     &b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p9 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p9b .lt. p5b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p9b_1 - noab - 1)))))))
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h10 - 1) + int_mb(k_range+h
     &10b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p9 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p9b .lt. p5b) .and. (h2b .le. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (p9b_1 - noab - 1)))))))
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h2 - 1) + int_mb(k_range+
     &h2b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p9 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p5b .le. p9b) .and. (p9b .lt. p6b) .and. (h10b .lt. h1b)) THE
     &N
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p9b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_range+h1
     &b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p9 - 1) + int_mb(k_range+p9b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p5b .le. p9b) .and. (p9b .lt. p6b) .and. (h1b .le. h10b) .and
     &. (h10b .lt. h2b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p9b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h10 - 1) + int_mb(k_range+h
     &10b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p9 - 1) + int_mb(k_range+p9b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p5b .le. p9b) .and. (p9b .lt. p6b) .and. (h2b .le. h10b)) THE
     &N
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 
     &1 + nvab * (p9b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h2 - 1) + int_mb(k_range+
     &h2b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p6 - 1) + int_mb(k_
     &range+p6b-1) * ((p9 - 1) + int_mb(k_range+p9b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p6b .le. p9b) .and. (h10b .lt. h1b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 
     &1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h1 - 1) + int_mb(k_range+h1
     &b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((p9 - 1) + int_mb(k_
     &range+p9b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p6b .le. p9b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h2b_1 - 1 
     &+ noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 
     &1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      idima = h2 + int_mb(k_range+h2b-1) * ((h10 - 1) + int_mb(k_range+h
     &10b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p9 - 1) + int_mb(k_
     &range+p9b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p6b .le. p9b) .and. (h2b .le. h10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 
     &1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((h2 - 1) + int_mb(k_range+
     &h2b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((p9 - 1) + int_mb(k_
     &range+p9b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1))))))
      idima_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p6 - 1) + int_
     &mb(k_range+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1))
     &))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_x4_8_8_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_x4_8_8_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_x4_8_8_1',4,MA_ERR)
      IF ((h10b .le. h13b) .and. (p9b .le. p12b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p12b_2 - 1
     & + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h13b_2 - 1 + (noab+nv
     &ab) * (h10b_2 - 1)))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      idimb = p12 + int_mb(k_range+p12b-1) * ((p9 - 1) + int_mb(k_range+
     &p9b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h10 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .le. h13b) .and. (p12b .lt. p9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p9b_2 - 1 
     &+ (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h13b_2 - 1 + (noab+nv
     &ab) * (h10b_2 - 1)))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimb = p9 + int_mb(k_range+p9b-1) * ((p12 - 1) + int_mb(k_range+p
     &12b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((h10 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h10b) .and. (p9b .le. p12b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p12b_2 - 1
     & + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nv
     &ab) * (h13b_2 - 1)))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      idimb = p12 + int_mb(k_range+p12b-1) * ((p9 - 1) + int_mb(k_range+
     &p9b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h13 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h13b .lt. h10b) .and. (p12b .lt. p9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p9b_2 - 1 
     &+ (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nv
     &ab) * (h13b_2 - 1)))))
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimb = p9 + int_mb(k_range+p9b-1) * ((p12 - 1) + int_mb(k_range+p
     &12b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h13 - 1))))
      idimb_sort = p9 + int_mb(k_range+p9b-1) * ((h10 - 1) + int_mb(k_ra
     &nge+h10b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p12 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_x4_8_8_1',5,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_x4_8_8_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_x4_8_8_1',7,MA_ERR)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      DO h13 = 1,int_mb(k_range+h13b-1)
      DO h1 = 1,int_mb(k_range+h1b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p12 = 1,int_mb(k_range+p12b-1)
      idimc_sort = p5 + int_mb(k_range+p5b-1) * ((p6 - 1) + int_mb(k_ran
     &ge+p6b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h2 - 1) + int_mb
     &(k_range+h2b-1) * ((h13 - 1) + int_mb(k_range+h13b-1) * ((p12 - 1)
     &)))))
      idimc = p12 + int_mb(k_range+p12b-1) * ((h2 - 1) + int_mb(k_range+
     &h2b-1) * ((h1 - 1) + int_mb(k_range+h1b-1) * ((h13 - 1) + int_mb(k
     &_range+h13b-1) * ((p6 - 1) + int_mb(k_range+p6b-1) * ((p5 - 1)))))
     &)
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p12b - noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * 
     &(h13b - 1 + noab * (p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_x4_8_8_1',8,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_x4_8_8_1'
     &,9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_x4_8_8_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_x4_8_8_1'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
