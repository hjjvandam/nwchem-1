      SUBROUTINE OFFSET_eomccsdtq_y1_13_12_2_1(d_a,l_a_offset,k_a_offset
     &,size)
C     $Id: OFFSET_eomccsdtq_y1_13_12_2_1.F,v 1.1 2003-10-19 00:58:12 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h2 h10 h11 h12 h16 p3 p7 p8 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h2b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h16b
      INTEGER p3b
      INTEGER p7b
      INTEGER p8b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab*noab*nvab*nvab*nva
     &b,'noname',l_a_offset,k_a_offset)) CALL ERRQUIT('eomccsdtq_y1_13_1
     &2_2_1',0,MA_ERR)
      size = 0
      DO h2b = 1,noab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h16b = 1,noab
      DO p3b = noab+1,noab+nvab
      DO p7b = p3b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+h16b-1)+int_mb(k_spin+
     &p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h16b-1)
     &,ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+p8
     &b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).
     &ne.16)) THEN
      int_mb(k_a_offset + p8b - noab - 1 + nvab * (p7b - noab - 1 + nvab
     & * (p3b - noab - 1 + nvab * (h16b - 1 + noab * (h12b - 1 + noab * 
     &(h11b - 1 + noab * (h10b - 1 + noab * (h2b - 1)))))))) = size
      size = size + int_mb(k_range+h2b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+h16b
     &-1) * int_mb(k_range+p3b-1) * int_mb(k_range+p7b-1) * int_mb(k_ran
     &ge+p8b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
