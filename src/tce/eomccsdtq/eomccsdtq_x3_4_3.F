      SUBROUTINE eomccsdtq_x3_4_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     $Id: eomccsdtq_x3_4_3.F,v 1.1 2003-10-19 00:58:54 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p4 p10 )_vt + = 1/2 * Sum ( h8 h9 p7 ) * t ( p4 p7 h8 h9 )_t * v ( h8 h9 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p10b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p7
      INTEGER p4
      INTEGER h8
      INTEGER h9
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER p10
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1)+in
     &t_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1).eq.8)) THEN
      p4b_1 = int_mb(k_alpha+p4b-1)
      p7b_1 = int_mb(k_alpha+p7b-1)
      h8b_1 = int_mb(k_alpha+h8b-1)
      h9b_1 = int_mb(k_alpha+h9b-1)
      ELSE
      p4b_1 = p4b
      p7b_1 = p7b
      h8b_1 = h8b
      h9b_1 = h9b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)+in
     &t_mb(k_spin+p10b-1)+int_mb(k_spin+p7b-1).eq.8)) THEN
      h8b_2 = int_mb(k_alpha+h8b-1)
      h9b_2 = int_mb(k_alpha+h9b-1)
      p10b_2 = int_mb(k_alpha+p10b-1)
      p7b_2 = int_mb(k_alpha+p7b-1)
      ELSE
      h8b_2 = h8b
      h9b_2 = h9b
      p10b_2 = p10b
      p7b_2 = p7b
      END IF
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_x3_4_3',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_x3_4_3',1,MA_ERR)
      IF ((p7b .lt. p4b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h9b_1 - 1 
     &+ noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_1 - n
     &oab - 1)))))
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      idima = h9 + int_mb(k_range+h9b-1) * ((h8 - 1) + int_mb(k_range+h8
     &b-1) * ((p4 - 1) + int_mb(k_range+p4b-1) * ((p7 - 1))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h8 - 1) + int_mb(k_ran
     &ge+h8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p4 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h9b_1 - 1 
     &+ noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_1 - n
     &oab - 1)))))
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      idima = h9 + int_mb(k_range+h9b-1) * ((h8 - 1) + int_mb(k_range+h8
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p4 - 1))))
      idima_sort = p7 + int_mb(k_range+p7b-1) * ((h8 - 1) + int_mb(k_ran
     &ge+h8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p4 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_x3_4_3',2,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_x3_4_3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_x3_4_3',4,MA_ERR)
      IF ((p7b .le. p10b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p10b_2 - 1
     & + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab+nva
     &b) * (h8b_2 - 1)))))
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      idimb = p10 + int_mb(k_range+p10b-1) * ((p7 - 1) + int_mb(k_range+
     &p7b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h8 - 1))))
      idimb_sort = p7 + int_mb(k_range+p7b-1) * ((h8 - 1) + int_mb(k_ran
     &ge+h8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p10 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p10b .lt. p7b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p7b_2 - 1 
     &+ (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab+nva
     &b) * (h8b_2 - 1)))))
      DO h8 = 1,int_mb(k_range+h8b-1)
      DO h9 = 1,int_mb(k_range+h9b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      idimb = p7 + int_mb(k_range+p7b-1) * ((p10 - 1) + int_mb(k_range+p
     &10b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((h8 - 1))))
      idimb_sort = p7 + int_mb(k_range+p7b-1) * ((h8 - 1) + int_mb(k_ran
     &ge+h8b-1) * ((h9 - 1) + int_mb(k_range+h9b-1) * ((p10 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_x3_4_3',5,MA_E
     &RR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_x3_4_3',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_x3_4_3',7,MA_ERR)
      DO p4 = 1,int_mb(k_range+p4b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      idimc_sort = p4 + int_mb(k_range+p4b-1) * ((p10 - 1))
      idimc = p10 + int_mb(k_range+p10b-1) * ((p4 - 1))
      dbl_mb(k_c + idimc - 1) = 1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_so
     &rt - 1)
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p10b - noab - 1 + nvab * (p4b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_x3_4_3',8,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_x3_4_3',9
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_x3_4_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_x3_4_3',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
