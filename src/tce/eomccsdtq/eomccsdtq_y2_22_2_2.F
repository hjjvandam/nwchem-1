      SUBROUTINE eomccsdtq_y2_22_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: eomccsdtq_y2_22_2_2.F,v 1.1 2003-10-19 00:59:43 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h3 p13 h16 p6 )_vt + = -1 * Sum ( h10 ) * t ( p13 h10 )_t * v ( h3 h10 h16 p6 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER p13b
      INTEGER h16b
      INTEGER p6b
      INTEGER h10b
      INTEGER p13b_1
      INTEGER h10b_1
      INTEGER h3b_2
      INTEGER h10b_2
      INTEGER h16b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p13
      INTEGER h10
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h3
      INTEGER h16
      INTEGER p6
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO p6b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+
     &h16b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+h16b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      DO h10b = 1,noab
      IF (int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+h10b-1)) .eq. irrep_t) 
     &THEN
      IF ((restricted).and.(int_mb(k_spin+p13b-1)+int_mb(k_spin+h10b-1).
     &eq.4)) THEN
      p13b_1 = int_mb(k_alpha+p13b-1)
      h10b_1 = int_mb(k_alpha+h10b-1)
      ELSE
      p13b_1 = p13b
      h10b_1 = h10b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+h16b-1)+int_mb(k_spin+p6b-1).eq.8)) THEN
      h3b_2 = int_mb(k_alpha+h3b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      h16b_2 = int_mb(k_alpha+h16b-1)
      p6b_2 = int_mb(k_alpha+p6b-1)
      ELSE
      h3b_2 = h3b
      h10b_2 = h10b
      h16b_2 = h16b
      p6b_2 = p6b
      END IF
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p13b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+h16b-1) * int_m
     &b(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y2_22_2_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y2_22_2_2',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h10b_1 - 1
     & + noab * (p13b_1 - noab - 1)))
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      idima = h10 + int_mb(k_range+h10b-1) * ((p13 - 1))
      idima_sort = h10 + int_mb(k_range+h10b-1) * ((p13 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y2_22_2_2',2,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y2_22_2_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y2_22_2_2',4,MA_ERR)
      IF ((h10b .lt. h3b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - 1 
     &+ (noab+nvab) * (h16b_2 - 1 + (noab+nvab) * (h3b_2 - 1 + (noab+nva
     &b) * (h10b_2 - 1)))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((h16 - 1) + int_mb(k_range+h
     &16b-1) * ((h3 - 1) + int_mb(k_range+h3b-1) * ((h10 - 1))))
      idimb_sort = h10 + int_mb(k_range+h10b-1) * ((h3 - 1) + int_mb(k_r
     &ange+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h3b .le. h10b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p6b_2 - 1 
     &+ (noab+nvab) * (h16b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noab+nv
     &ab) * (h3b_2 - 1)))))
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimb = p6 + int_mb(k_range+p6b-1) * ((h16 - 1) + int_mb(k_range+h
     &16b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h3 - 1))))
      idimb_sort = h10 + int_mb(k_range+h10b-1) * ((h3 - 1) + int_mb(k_r
     &ange+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p6 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y2_22_2_2',5,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y2_22_2_2',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y2_22_2_2',7,MA_ERR)
      DO h3 = 1,int_mb(k_range+h3b-1)
      DO p13 = 1,int_mb(k_range+p13b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p6 = 1,int_mb(k_range+p6b-1)
      idimc_sort = p13 + int_mb(k_range+p13b-1) * ((h3 - 1) + int_mb(k_r
     &ange+h3b-1) * ((h16 - 1) + int_mb(k_range+h16b-1) * ((p6 - 1))))
      idimc = p6 + int_mb(k_range+p6b-1) * ((h16 - 1) + int_mb(k_range+h
     &16b-1) * ((p13 - 1) + int_mb(k_range+p13b-1) * ((h3 - 1))))
      dbl_mb(k_c + idimc - 1) = - dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p6b - noab - 1 + nvab * (h16b - 1 + noab * (p13b - noab - 1 +
     & nvab * (h3b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y2_22_2_2',8,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y2_22_2_2
     &',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y2_22_2_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y2_22_2_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
