      SUBROUTINE eomccsdtq_y1_13_12_2_1(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: eomccsdtq_y1_13_12_2_1.F,v 1.1 2003-10-19 00:59:12 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h2 h10 h11 h12 h16 p3 p7 p8 )_yt + = 1 * Sum ( p5 ) * t ( p5 h16 )_t * y ( h2 h10 h11 h12 p3 p5 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h16b
      INTEGER p3b
      INTEGER p7b
      INTEGER p8b
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h16b_1
      INTEGER h2b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p3b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p5
      INTEGER h16
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER h10
      INTEGER h11
      INTEGER h12
      INTEGER h2
      INTEGER p3
      INTEGER p7
      INTEGER p8
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h16b = 1,noab
      DO p3b = noab+1,noab+nvab
      DO p7b = p3b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).
     &ne.16)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+h16b-1)+int_mb(k_spin+
     &p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h16b-1)
     &,ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+p8
     &b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h16b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h16b-1)) .eq. irrep_t) T
     &HEN
      IF ((restricted).and.(int_mb(k_spin+p5b-1)+int_mb(k_spin+h16b-1).e
     &q.4)) THEN
      p5b_1 = int_mb(k_alpha+p5b-1)
      h16b_1 = int_mb(k_alpha+h16b-1)
      ELSE
      p5b_1 = p5b
      h16b_1 = h16b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b-1)+i
     &nt_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+p3b-1)+in
     &t_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p5b-1).eq.16
     &)) THEN
      h2b_2 = int_mb(k_alpha+h2b-1)
      h10b_2 = int_mb(k_alpha+h10b-1)
      h11b_2 = int_mb(k_alpha+h11b-1)
      h12b_2 = int_mb(k_alpha+h12b-1)
      p3b_2 = int_mb(k_alpha+p3b-1)
      p7b_2 = int_mb(k_alpha+p7b-1)
      p8b_2 = int_mb(k_alpha+p8b-1)
      p5b_2 = int_mb(k_alpha+p5b-1)
      ELSE
      h2b_2 = h2b
      h10b_2 = h10b
      h11b_2 = h11b
      h12b_2 = h12b
      p3b_2 = p3b
      p7b_2 = p7b
      p8b_2 = p8b
      p5b_2 = p5b
      END IF
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h16b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+p3b-1)
     & * int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_13_12_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_13_12_2_1',1,MA_ERR)
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h16b_1 - 1
     & + noab * (p5b_1 - noab - 1)))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      idima = h16 + int_mb(k_range+h16b-1) * ((p5 - 1))
      idima_sort = p5 + int_mb(k_range+p5b-1) * ((h16 - 1))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_13_12_2_1',
     &2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_13_12_2_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_13_12_2_1',4,MA_ERR)
      IF ((h12b .lt. h2b) .and. (p5b .lt. p3b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h12 - 1) + int_
     &mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h12b .lt. h2b) .and. (p3b .le. p5b) .and. (p5b .le. p7b)) THE
     &N
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h12 - 1) + int_
     &mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h12b .lt. h2b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b)) THE
     &N
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h12 - 1) + int_
     &mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h12b .lt. h2b) .and. (p8b .lt. p5b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p5b_2 - no
     &ab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      idimb = p5 + int_mb(k_range+p5b-1) * ((p8 - 1) + int_mb(k_range+p8
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h12 - 1) + int_
     &mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h11b .lt. h2b) .and. (h2b .le. h12b) .and. (p5b .lt. p3b)) TH
     &EN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h2b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h2 - 1) + int
     &_mb(k_range+h2b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h11b .lt. h2b) .and. (h2b .le. h12b) .and. (p3b .le. p5b) .an
     &d. (p5b .le. p7b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h2b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h2 - 1) + int
     &_mb(k_range+h2b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h11b .lt. h2b) .and. (h2b .le. h12b) .and. (p7b .lt. p5b) .an
     &d. (p5b .le. p8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h2b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h2 - 1) + int
     &_mb(k_range+h2b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h11b .lt. h2b) .and. (h2b .le. h12b) .and. (p8b .lt. p5b)) TH
     &EN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p5b_2 - no
     &ab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h2b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      idimb = p5 + int_mb(k_range+p5b-1) * ((p8 - 1) + int_mb(k_range+p8
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h2 - 1) + int
     &_mb(k_range+h2b-1) * ((h11 - 1) + int_mb(k_range+h11b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h11b) .and. (p5b .lt. p3b)) TH
     &EN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h11b) .and. (p3b .le. p5b) .an
     &d. (p5b .le. p7b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h11b) .and. (p7b .lt. p5b) .an
     &d. (p5b .le. p8b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h11b) .and. (p8b .lt. p5b)) TH
     &EN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p5b_2 - no
     &ab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      idimb = p5 + int_mb(k_range+p5b-1) * ((p8 - 1) + int_mb(k_range+p8
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h2 - 1) + int_mb(k_range+h2b-1) * ((h10 -
     & 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h2b .le. h10b) .and. (p5b .lt. p3b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nva
     &b * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((p5 - 1) + int_mb(k_ra
     &nge+p5b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h2 
     &- 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h2b .le. h10b) .and. (p3b .le. p5b) .and. (p5b .le. p7b)) THE
     &N
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h2 
     &- 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h2b .le. h10b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b)) THE
     &N
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p8b_2 - no
     &ab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimb = p8 + int_mb(k_range+p8b-1) * ((p5 - 1) + int_mb(k_range+p5
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h2 
     &- 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((h2b .le. h10b) .and. (p8b .lt. p5b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p5b_2 - no
     &ab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nva
     &b * (p3b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 - 1 + 
     &noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      idimb = p5 + int_mb(k_range+p5b-1) * ((p8 - 1) + int_mb(k_range+p8
     &b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * ((p3 - 1) + int_mb(k_ra
     &nge+p3b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + in
     &t_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h2 
     &- 1))))))))
      idimb_sort = p5 + int_mb(k_range+p5b-1) * ((h2 - 1) + int_mb(k_ran
     &ge+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + int
     &_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3 -
     & 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) * 
     &((p8 - 1))))))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_13_12_2_1',
     &5,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('eomccsdtq_y1_13_12_2_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,0.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('eomccsdtq_y1_13_12_2_1',7,MA_ERR)
      DO h2 = 1,int_mb(k_range+h2b-1)
      DO h10 = 1,int_mb(k_range+h10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO h16 = 1,int_mb(k_range+h16b-1)
      DO p3 = 1,int_mb(k_range+p3b-1)
      DO p7 = 1,int_mb(k_range+p7b-1)
      DO p8 = 1,int_mb(k_range+p8b-1)
      idimc_sort = h16 + int_mb(k_range+h16b-1) * ((h2 - 1) + int_mb(k_r
     &ange+h2b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h11 - 1) + i
     &nt_mb(k_range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p3
     & - 1) + int_mb(k_range+p3b-1) * ((p7 - 1) + int_mb(k_range+p7b-1) 
     &* ((p8 - 1))))))))
      idimc = p8 + int_mb(k_range+p8b-1) * ((p7 - 1) + int_mb(k_range+p7
     &b-1) * ((p3 - 1) + int_mb(k_range+p3b-1) * ((h16 - 1) + int_mb(k_r
     &ange+h16b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1) + 
     &int_mb(k_range+h11b-1) * ((h10 - 1) + int_mb(k_range+h10b-1) * ((h
     &2 - 1))))))))
      dbl_mb(k_c + idimc - 1) = dbl_mb(k_c_sort + idimc_sort - 1)
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p8b - noab - 1 + nvab * (p7b - noab - 1 + nvab * (p3b - noab 
     &- 1 + nvab * (h16b - 1 + noab * (h12b - 1 + noab * (h11b - 1 + noa
     &b * (h10b - 1 + noab * (h2b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_13_12_2_1',
     &8,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_13_12_
     &2_1',9,MA_ERR)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_13_12_
     &2_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_13_12_
     &2_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
