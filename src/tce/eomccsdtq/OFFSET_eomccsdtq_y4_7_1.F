      SUBROUTINE OFFSET_eomccsdtq_y4_7_1(d_a,l_a_offset,k_a_offset,size)
C     $Id: OFFSET_eomccsdtq_y4_7_1.F,v 1.1 2003-10-19 00:58:29 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h5 h6 h13 h14 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h5b
      INTEGER h6b
      INTEGER h13b
      INTEGER h14b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*noab,'noname',l_a_offse
     &t,k_a_offset)) CALL ERRQUIT('eomccsdtq_y4_7_1',0,MA_ERR)
      size = 0
      DO h5b = 1,noab
      DO h6b = h5b,noab
      DO h13b = 1,noab
      DO h14b = h13b,noab
      IF (int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1) .eq. int_mb(k_spin+h
     &13b-1)+int_mb(k_spin+h14b-1)) THEN
      IF (ieor(int_mb(k_sym+h5b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h13b-1),int_mb(k_sym+h14b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1).ne.8)) THEN
      int_mb(k_a_offset + h14b - 1 + noab * (h13b - 1 + noab * (h6b - 1 
     &+ noab * (h5b - 1)))) = size
      size = size + int_mb(k_range+h5b-1) * int_mb(k_range+h6b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
