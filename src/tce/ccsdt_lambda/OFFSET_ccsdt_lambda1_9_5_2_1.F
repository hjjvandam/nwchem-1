      SUBROUTINE OFFSET_ccsdt_lambda1_9_5_2_1(d_a,l_a_offset,k_a_offset,
     &size)
C     $Id: OFFSET_ccsdt_lambda1_9_5_2_1.F,v 1.2 2004-12-11 00:06:31 edo Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h5 h6 h9 p3 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER h5b
      INTEGER h6b
      INTEGER h9b
      INTEGER p3b
      INTEGER p7b
      INTEGER p8b
      IF (.not.MA_PUSH_GET(mt_int,noab*noab*noab*nvab*nvab*nvab,'noname'
     &,l_a_offset,k_a_offset)) CALL ERRQUIT('ccsdt_lambda1_9_5_2_1',0,MA
     &_ERR)
      size = 0
      DO h5b = 1,noab
      DO h6b = h5b,noab
      DO h9b = h6b,noab
      DO p3b = noab+1,noab+nvab
      DO p7b = p3b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h5b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),int
     &_mb(k_sym+p8b-1)))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1)+i
     &nt_mb(k_spin+p8b-1).ne.12)) THEN
      int_mb(k_a_offset + p8b - noab - 1 + nvab * (p7b - noab - 1 + nvab
     & * (p3b - noab - 1 + nvab * (h9b - 1 + noab * (h6b - 1 + noab * (h
     &5b - 1)))))) = size
      size = size + int_mb(k_range+h5b-1) * int_mb(k_range+h6b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+p3b-1) * int_mb(k_range+p7b-1) 
     &* int_mb(k_range+p8b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
