      SUBROUTINE ccsdtq_t4_4_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_off
     &set)
C     $Id: ccsdtq_t4_4_3.F,v 1.1 2003-09-16 21:50:39 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p5 p9 )_vt + = -1/2 * Sum ( h11 h12 p10 ) * t ( p5 p10 h11 h12 )_t * v ( h11 h12 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p5b_1
      INTEGER p10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER p10
      INTEGER p5
      INTEGER h11
      INTEGER h12
      INTEGER idima
      INTEGER idima_sort
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER p9
      INTEGER idimb
      INTEGER idimb_sort
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER l_c
      INTEGER k_c
      INTEGER idimc_sort
      INTEGER idimc
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p5b = noab+1,noab+nvab
      DO p9b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p9b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+p9b-1)) .eq. ieor(irrep_
     &v,irrep_t)) THEN
      DO p10b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      IF ((restricted).and.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p10b-1)+i
     &nt_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1).eq.8)) THEN
      p5b_1 = int_mb(k_alpha+p5b-1)
      p10b_1 = int_mb(k_alpha+p10b-1)
      h11b_1 = int_mb(k_alpha+h11b-1)
      h12b_1 = int_mb(k_alpha+h12b-1)
      ELSE
      p5b_1 = p5b
      p10b_1 = p10b
      h11b_1 = h11b
      h12b_1 = h12b
      END IF
      IF ((restricted).and.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+
     &int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1).eq.8)) THEN
      h11b_2 = int_mb(k_alpha+h11b-1)
      h12b_2 = int_mb(k_alpha+h12b-1)
      p9b_2 = int_mb(k_alpha+p9b-1)
      p10b_2 = int_mb(k_alpha+p10b-1)
      ELSE
      h11b_2 = h11b
      h12b_2 = h12b
      p9b_2 = p9b
      p10b_2 = p10b
      END IF
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p5b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_t4_4_3',0)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_t4_4_3',1)
      IF ((p10b .lt. p5b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h12b_1 - 1
     & + noab * (h11b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p10b_1 
     &- noab - 1)))))
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idima = h12 + int_mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range
     &+h11b-1) * ((p5 - 1) + int_mb(k_range+p5b-1) * ((p10 - 1))))
      idima_sort = p10 + int_mb(k_range+p10b-1) * ((h11 - 1) + int_mb(k_
     &range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p5 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = - dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p5b .le. p10b)) THEN
      CALL GET_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset + h12b_1 - 1
     & + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p5b_1 
     &- noab - 1)))))
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      idima = h12 + int_mb(k_range+h12b-1) * ((h11 - 1) + int_mb(k_range
     &+h11b-1) * ((p10 - 1) + int_mb(k_range+p10b-1) * ((p5 - 1))))
      idima_sort = p10 + int_mb(k_range+p10b-1) * ((h11 - 1) + int_mb(k_
     &range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p5 - 1))))
      dbl_mb(k_a_sort + idima_sort - 1) = dbl_mb(k_a + idima - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_t4_4_3',2)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_t4_4_3',3)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_t4_4_3',4)
      IF ((p10b .lt. p9b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p9b_2 - 1 
     &+ (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noab+nv
     &ab) * (h11b_2 - 1)))))
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimb = p9 + int_mb(k_range+p9b-1) * ((p10 - 1) + int_mb(k_range+p
     &10b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1))))
      idimb_sort = p10 + int_mb(k_range+p10b-1) * ((h11 - 1) + int_mb(k_
     &range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p9 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = - dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF ((p9b .le. p10b)) THEN
      CALL GET_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset + p10b_2 - 1
     & + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noab+nv
     &ab) * (h11b_2 - 1)))))
      DO h11 = 1,int_mb(k_range+h11b-1)
      DO h12 = 1,int_mb(k_range+h12b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      DO p10 = 1,int_mb(k_range+p10b-1)
      idimb = p10 + int_mb(k_range+p10b-1) * ((p9 - 1) + int_mb(k_range+
     &p9b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((h11 - 1))))
      idimb_sort = p10 + int_mb(k_range+p10b-1) * ((h11 - 1) + int_mb(k_
     &range+h11b-1) * ((h12 - 1) + int_mb(k_range+h12b-1) * ((p9 - 1))))
      dbl_mb(k_b_sort + idimb_sort - 1) = dbl_mb(k_b + idimb - 1)
      END DO
      END DO
      END DO
      END DO
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_t4_4_3',5)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c_sort,
     &k_c_sort)) CALL ERRQUIT('ccsdtq_t4_4_3',6)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,0.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_PUSH_GET(mt_dbl,dima_sort*dimb_sort,'noname',l_c,k_c))
     & CALL ERRQUIT('ccsdtq_t4_4_3',7)
      DO p5 = 1,int_mb(k_range+p5b-1)
      DO p9 = 1,int_mb(k_range+p9b-1)
      idimc_sort = p5 + int_mb(k_range+p5b-1) * ((p9 - 1))
      idimc = p9 + int_mb(k_range+p9b-1) * ((p5 - 1))
      dbl_mb(k_c + idimc - 1) = -1.0d0/2.0d0 * dbl_mb(k_c_sort + idimc_s
     &ort - 1)
      END DO
      END DO
      CALL ADD_BLOCK(d_c,dbl_mb(k_c),dima_sort*dimb_sort,int_mb(k_c_offs
     &et + p9b - noab - 1 + nvab * (p5b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_t4_4_3',8)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_t4_4_3',9)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_t4_4_3',10)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_t4_4_3',11)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
