
        Guide to Installing NWChem  
        ==========================
        $Id: INSTALL,v 1.5 1996-04-22 21:34:21 gg502 Exp $


  DO THESE STEPS IN ORDER OR THE BUILD WILL FAIL
                                       ----


1)  The compilation will only work with "GNU" make as the
    default make in your path. You can check this by seeing 
    if make understands the "-v" flag.


2)  Set the environment variable, NWCHEM_TOP, to the
    directory where *this* file lives, e.g.

       % setenv NWCHEM_TOP /home/adrian/nwchem

    All the following directions assume that the current
    working directory is $NWCHEM_TOP/src.


3)  The currently supported platforms are:

    Symb.Name  Platform               OS/Version    Precision
    ----------------------------------------------------------
    SUN         Sun                    SunOS        double
    IBM         IBM RS/6000            AIX          double
    DECOSF      DEC AXP                OSF/1        double
    SGI         SGI ?                  IRIX         double
    SGITFP      SGI Power Challenge    IRIX         double
    CRAY_T3D    Cray T3D               UNICOS       single
    PARAGON     Intel Paragon          OSF/1        double
    DELTA       Intel Delta            NX           double
    SP1         IBM SP1,SP2            AIX          double
    KSR         KSR2                   KSR OS       single
    ----------------------------------------------------------

    Set the environment variable, NWCHEM_TARGET, to the
    symbolic name that matches your target platform, e.g.

       % setenv NWCHEM_TARGET PARAGON

4)  Configure to build the modules you need.  As a first shot
    build everything, and if you start running out of memory
    you can exclude modules.  Choose one or more from

        Name        Description
        -------------------------------------
	ddscf       RHF and UHF SCF energies
        nwdft       DFT energies
        gradients   SCF gradients
	dftgrad     DFT gradients
        stepper     Geometry optimization
        moints      4-index
        rimp2       RI-MP2
        ccsd        CCSD & CCSD(T)
        -------------------------------------

    To configure to build everything use the command

       % cd $NWCHEM_TOP/src
       % make nwchem_config NWCHEM_MODULES=all

5)  Run the precision conversion according to the Precision
    column above for your target. This is necessary only 
    on machines where 64 bit is single precision in order 
    to match BLAS routine names to vendor-supplied libraries
    (or if converting back from such source into the standard
    of 64 bit is double precision).

    For 64 bit single precision source

       % make dbl_to_sngl


6)  Make any missing directories

       % make directories

7)  Finally, compile and link:
       % make >& make.log
    This should install the executables and libraries
    into platform-specific subdirectories in the directory
    tree. For example, if the target platform equals PARAGON
    then the following subdirectories are created:

	$NWCHEM_TOP/bin/PARAGON          (executables)
        $NWCHEM_TOP/lib/PARAGON          (libraries)

NOTE TO MPI USERS:

NWChem can be compiled to use MPI instead of TCGMSG for message
passing on many systems, though this is still somewhat experimental --
be on the looking for problems.  The following procedures and remarks
should be inserted into the procedure above

3.5) Additional environment variables must be set:
	setenv USE_MPI yes
	setenv MPI_LIB /usr/local/lib/mpich/rs6000/ch_eui
	setenv MPI_INCLUDE /usr/local/include
MPI_LIB and MPI_INCLUDE are paths to the library and include files for
the MPI implementation you are using (example is appropriate for the
Cornell Theory Center MPICH installation).  If the MPI libraries and
includes are in locations already searched by the compiler/linker, it
is not necessary to set MPI_LIB and MPI_INCLUDE.

7) If you are linking NWChem with the PeIGS eigensolver, the best
approach seems to be to build PeIGS for TCGMSG message passing, not
MPI!  The tcgmsg-mpi wrapper library will resolve all message passing
calls from PeIGS.  The reason for this recommendation is that PeIGS
currently calls MPI from Fortran, while NWChem calls it only from C.
The current version of the MPI standard does not guarantee
mixed-language operation, so it is safer to avoid it.

NOTE TO MPI USERS ON THE IBM SP:

If you are adventurous enough to try linking against a copy of PeIGS
configured for MPI instead of TCGMSG, you'll probably need to
uncomment a section in src/config/makefile.h to handle the Fortran/C
interface renaming for PeIGS MPI calls.

For SP systems running AIX 3.2.5, there are two main MPI
implementations available (not at all sites).  MPICH from ANL/Missippi
State, and MPI-F from IBM itself.  Because NWChem uses both MPL and
MPI on the SP, it is necessary to link against appropriate libraries
for both packages.  This is easily done using MPICH, but is not easily
done using MPI-F.  Rather than spending time getting MPI-F to work,
we've elected to wait for SPs to upgrade to AIX 4, in which a native
MPI implementation will be available, and is prupported to link (and
work) okay with MPL.
