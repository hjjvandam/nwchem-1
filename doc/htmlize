#!/bin/csh

# Script to automate updating of web pages for the
# user and programmers manuals.

if ($#argv != 1) then
  echo usage: htmlize document 
  echo        where document.tex is the main file
  exit 1
endif

set WWWDIR=/msrc/doc/www/changes/docs/nwchem/doc
set TMP=tmp.$$

set L2HOPT="-split 2 -bottom_navigation  -show_section_numbers"

# works also with a list of files here but not currently
# used in this fashion

foreach document ($1)

  echo HTMLizing $document.tex

# First make sure the latex builds OK

  echo "   Cleaning and making $document.ps"

goto doit

  make clean >& /dev/null
  make $document.ps >& $document.latex.log

  if ($status != 0) then
    echo htmlize: latex errors reported in $document.latex.log
    exit 1
  endif

# Get rid of the old directory and run latex2html

  if (-e $document) then
    echo "   Removing old $document directory"
    /bin/rm -rf $document
  endif

  echo "   Running latex2html on $document.tex"

  latex2html $L2HOPT $document.tex >& $document.latex2html.log
  if ($status != 0) then
    echo htmlize: latex2html errors reported in $document.latex2html.log
    exit 1
  endif

# To make the document searchable we need to make the INDEX file
# and insert the link near the top of document/document.html.
# We actually shove it immediately before the first unnumbered list
# <UL> which is the table of contents

  echo "   Inserting search information into $document/$document.html"

  /bin/cp $document.INDEX $document/INDEX
  if ($status != 0) then
    echo htmlize: copy of INDEX for $document failed
    exit 1
  endif

  @ i = 0
  sed -e '/<UL>/,$ d' < $document/$document.html > $TMP
  @ i += $status
  cat $document.search >> $TMP
  @ i += $status
  echo '<UL>' >> $TMP
  @ i += $status
  sed -e '1,/<UL>/ d' < $document/$document.html >> $TMP
  @ i += $status

  if ($i != 0) then
    echo htmlize: insertion of search info into $document failed
    exit 1
  endif

  /bin/mv $document/$document.html  $document/$document.html.bak
  mv $TMP $document/$document.html 

# Munge the backgrounds ... need to hardwire the sed here since have
# trouble getting a shell variable inside two levels of quotes.
#
# At same time eliminate references to http://www.emsl.pnl.gov since we
# need to reference files from the root in order for them to work on 
# both the public and private side

  echo "   Munging backgrounds and http paths"

  pushd $document > /dev/null

  foreach file (*.html)
    if ($document == "prog") then
      sed -e 's/<BODY>/<BODY BACKGROUND="..\/..\/backgrounds\/rainier1_1.jpg" BGCOLOR="FAEBD7">/' -e 's,http://www.emsl.pnl.gov,,g' < $file > $TMP
    else if ($document == "user") then
      sed -e 's/<BODY>/<BODY BACKGROUND="..\/..\/backgrounds\/mt_st_helens_4.jpg" BGCOLOR="FAEBD7">/' -e 's,http://www.emsl.pnl.gov,,g' < $file > $TMP
    else
      echo htmlize: unknown document in background munge ... $document
      exit 1
    endif

    if ($status != 0) then
       echo htmlize: sed of $file failed ... look in $TMP for output.
       exit 1
    endif
    /bin/mv $TMP $file
  end

  popd > /dev/null

# Copy the postscript and compressed postscript files down

  echo "   Copying postscript source"

  cp $document.ps $document
  if ($status != 0) then
    echo htmlize: copy of postscript failed for $document
    exit 1
  endif

  compress < $document.ps > $document/$document.ps.Z  

  if ($status != 0) then
    echo htmlize: compression of postscript failed for $document
    exit 1
  endif

# Now copy the revised source into the EMSL WWW changes tree

  if (! -e $WWWDIR) then
    echo Making $WWWDIR
    /bin/mkdir -p $WWWDIR
  else
    /bin/rm -rf $WWWDIR/$document
  endif

  echo "   Copying $document into $WWWDIR"

  /bin/cp -r $document $WWWDIR
  
  if ($status != 0) then
    echo htmlize: copy to $WWWDIR of $document failed
    exit 1
  endif

# Now run Pawel's magic perl script to make the frames
doit:
  if (! $?NWCHEM_TOP ) then
    echo "   NWCHEM_TOP is not defined ... cannot generate frames"
  else if (! -e $NWCHEM_TOP/doc/make_manual.pl) then
    echo "   $NWCHEM_TOP/doc/make_manual.pl missing ... cannot generate frames"
  else
    echo "   Making frames"
    pushd $WWWDIR/$document > /dev/null
    if ($document == "user") then
      set title = "NWChem User Manual"
    else if ($document == "prog") then
      set title = "NWChem Programmers Manual"
    else
      set title = "NWChem Manual"
    endif

    $NWCHEM_TOP/doc/make_manual.pl $document.html "$title"

    if ($status != 0) then
      echo "   Making the frames failed"
    endif
   
    popd > /dev/null
  endif


# Hopefully all is OK

  echo "   Done with $document"
 
  /bin/rm -rf $TMP $document

end

echo " "
echo Ask webmaster@emsl to update $WWWDIR/...
echo " "
echo     mailx -s \'Please update from $WWWDIR\' webmaster@emsl
echo " "
